---
import "../../../styles/Admin/ModalModificarEvento.css";
---

<div id="modalModificarEvento" class="modal">
    <div class="modal-contenido">
        <span class="cerrar" onclick="cerrarModalModificarEvento()"
            >&times;</span
        >
        <div class="formulario-completo">
            <form
                class="formulario-modificar-registro"
                method="POST"
                id="formulario-modificar-evento"
                enctype="multipart/form-data"
            >
                <input type="hidden" name="evento_id" />

                <div class="contenedor-superior">
                    <p class="texto-centrado texto-roja">Información General</p>

                    <div class="contenedor-dato">
                        <p class="texto-dato">Nombre</p>
                        <div class="contenedor-input">
                            <input
                                type="text"
                                class="input-dato"
                                name="nombre"
                                required
                            />
                        </div>
                    </div>

                    <div class="contenedor-dato">
                        <p class="texto-dato">Descripción</p>
                        <div class="contenedor-input">
                            <textarea
                                class="input-dato"
                                name="descripcion"
                                rows="3"
                                required></textarea>
                        </div>
                    </div>
                    <div class="contenedor-nombre">
                        <div class="contenedor-dato">
                            <p class="texto-dato">Categoría:</p>
                            <div class="contenedor-input">
                                <select
                                    name="categoria"
                                    class="input-dato"
                                    required
                                >
                                    <option value=""
                                        >Seleccione una categoría</option
                                    >
                                    <!-- Las opciones se cargarán dinámicamente -->
                                </select>
                            </div>
                        </div>

                        <div class="contenedor-dato">
                            <p class="texto-dato">Área:</p>
                            <div class="contenedor-input">
                                <select name="area" class="input-dato">
                                    <option value="">Elija una Área</option>
                                    <option value="PRACTICA">Práctica</option>
                                    <option value="INVESTIGACION"
                                        >Investigación</option
                                    >
                                    <option value="ACADEMICA">Académica</option>
                                    <option value="TECNICA">Técnica</option>
                                    <option value="INDUSTRIAL"
                                        >Industrial</option
                                    >
                                    <option value="EMPRESARIAL"
                                        >Empresarial</option
                                    >
                                    <option value="IA">IA</option>
                                    <option value="REDES">Redes</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="contenedor-nombre">
                        <div class="contenedor-dato">
                            <p class="texto-dato">Precio (USD):</p>
                            <div class="contenedor-input">
                                <input
                                    type="number"
                                    step="0.01"
                                    min="0"
                                    max="999999.99"
                                    class="input-dato"
                                    name="precio"
                                    value="0"
                                    id="precio-input"
                                />
                            </div>
                        </div>

                        <div class="contenedor-dato">
                            <p class="texto-dato">¿Es Gratuito?</p>
                            <div class="contenedor-input">
                                <select
                                    name="es_gratuito"
                                    class="input-dato"
                                    id="es-gratuito-select"
                                >
                                    <option value="false"
                                        >No, tiene costo</option
                                    >
                                    <option value="true">Sí, es gratuito</option
                                    >
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="contenedor-nombre">
                        <div class="contenedor-dato">
                            <p class="texto-dato">¿Requiere Carta?</p>
                            <div class="contenedor-input">
                                <select
                                    name="requiere_carta"
                                    class="input-dato"
                                >
                                    <option value="false"
                                        >No requiere carta</option
                                    >
                                    <option value="true"
                                        >Sí requiere carta</option
                                    >
                                </select>
                            </div>
                        </div>

                        <div class="contenedor-dato">
                            <p class="texto-dato">¿Es Destacado?</p>
                            <div class="contenedor-input">
                                <select name="es_destacado" class="input-dato">
                                    <option value="false">No destacado</option>
                                    <option value="true">Sí destacado</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="contenedor-dato">
                        <p class="texto-dato">
                            Carta de Motivación (Opcional):
                        </p>
                        <div class="contenedor-input">
                            <textarea
                                class="input-dato"
                                name="car_mot_eve"
                                rows="3"
                                placeholder="Instrucciones para la carta de motivación..."
                            ></textarea>
                        </div>
                    </div>
                </div>
                <div class="contenedor-superior">
                    <p class="texto-centrado texto-roja">Programación</p>
                    <div class="contenedor-nombre">
                        <div class="contenedor-dato">
                            <p class="texto-dato">Fecha de Inicio:</p>
                            <div class="contenedor-input">
                                <input
                                    type="date"
                                    class="input-dato"
                                    name="fecha_inicio"
                                    required
                                />
                            </div>
                        </div>

                        <div class="contenedor-dato">
                            <p class="texto-dato">Hora de Inicio:</p>
                            <div class="contenedor-input">
                                <input
                                    type="time"
                                    class="input-dato"
                                    name="hora_inicio"
                                    required
                                />
                            </div>
                        </div>
                    </div>

                    <div class="contenedor-nombre">
                        <div class="contenedor-dato">
                            <p class="texto-dato">Fecha de Finalización:</p>
                            <div class="contenedor-input">
                                <input
                                    type="date"
                                    class="input-dato"
                                    name="fecha_fin"
                                />
                            </div>
                        </div>

                        <div class="contenedor-dato">
                            <p class="texto-dato">Hora de Finalización:</p>
                            <div class="contenedor-input">
                                <input
                                    type="time"
                                    class="input-dato"
                                    name="hora_fin"
                                />
                            </div>
                        </div>
                    </div>

                    <div class="contenedor-nombre">
                        <div class="contenedor-dato">
                            <p class="texto-dato">Fecha Inicio Inscripción:</p>
                            <div class="contenedor-input">
                                <input
                                    type="date"
                                    class="input-dato"
                                    name="fecha_inicio_inscripcion"
                                    required
                                />
                            </div>
                        </div>

                        <div class="contenedor-dato">
                            <p class="texto-dato">Fecha Fin Inscripción:</p>
                            <div class="contenedor-input">
                                <input
                                    type="date"
                                    class="input-dato"
                                    name="fecha_fin_inscripcion"
                                    required
                                />
                            </div>
                        </div>
                    </div>

                    <div class="contenedor-dato">
                        <p class="texto-dato">Duración (minutos)</p>
                        <div class="contenedor-input">
                            <input
                                type="number"
                                min="1"
                                class="input-dato"
                                name="duracion"
                                placeholder="Duración en minutos"
                            />
                        </div>
                    </div>

                    <div class="contenedor-dato">
                        <p class="texto-dato">Ubicación</p>
                        <div class="contenedor-input">
                            <input
                                type="text"
                                class="input-dato"
                                name="ubicacion"
                                required
                            />
                        </div>
                    </div>
                </div>
                <div class="contenedor-inferior">
                    <p class="texto-centrado texto-roja">Organizador</p>
                    <div class="contenedor-dato">
                        <p class="texto-dato">Organizador</p>
                        <div class="contenedor-input">
                            <select
                                name="cedula_organizador"
                                class="input-dato"
                                required
                            >
                                <option value=""
                                    >Seleccione un organizador</option
                                >
                                <!-- Las opciones se cargarán dinámicamente -->
                            </select>
                        </div>
                    </div>
                    <!-- Sección de Asignación -->
                    <div class="contenedor-superior">
                        <p class="texto-centrado texto-roja">Asignación</p>
                        <div class="contenedor-dato">
                            <p class="texto-dato">Asignación del Evento:</p>
                            <div class="contenedor-input">
                                <select
                                    name="id_asignacion"
                                    class="input-dato"
                                    required
                                >
                                    <option value=""
                                        >Seleccione una asignación</option
                                    >
                                    <!-- Las opciones se cargarán dinámicamente -->
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="contenedor-boton-modificar">
                        <button
                            type="button"
                            class="boton-modificar"
                            onclick="cerrarModalModificarEvento()"
                            >Cancelar</button
                        >
                        <button type="submit" class="boton-modificar"
                            >Modificar Evento</button
                        >
                    </div>
                </div>
                <div class="contenedor-imagen">
                    <img
                        id="evento-imagen"
                        class="imagen-evento"
                        style="display: none;"
                        alt="Imagen del evento"
                    />

                    <div class="contenedor-file">
                        <label
                            for="file-upload-modificar"
                            class="custom-file-upload"
                        >
                            <img
                                src="/img/CRUD/upload.png"
                                alt="Subir imagen"
                                class="upload-icon"
                            />
                            <span>Seleccionar imagen</span>
                        </label>
                        <input
                            id="file-upload-modificar"
                            type="file"
                            name="imagen"
                            class="input-file"
                            accept="image/*"
                        />
                        <p class="file-name">
                            No se ha seleccionado ningún archivo
                        </p>
                    </div>
                </div>
            </form>
        </div>

        <script>
            import { actions } from "astro:actions";
            import Swal from "sweetalert2";
            interface Evento {
                id_eve: string;
                nom_eve: string;
                des_eve: string;
                fec_ini_eve: string;
                fec_fin_eve?: string;
                hor_ini_eve: string;
                hor_fin_eve?: string;
                dur_eve?: number;
                are_eve?: string;
                ubi_eve: string;
                img_eve?: string;
                precio: number;
                ced_org_eve: string;
                id_cat_eve: string;
                es_gratuito: boolean;
                requiere_carta: boolean;
                es_destacado: boolean;
                car_mot_eve?: string;
                fec_ini_ins?: string;
                fec_fin_ins?: string;
                id_asignacion?: string;
            }
            declare global {
                interface Window {
                    abrirModalModificarEvento: (eventoId: string) => void;
                    cerrarModalModificarEvento: () => void;
                }
            }
            async function cargarCategoriasOrganizadoresYAsignaciones() {
                try {
                    // Cargar categorías usando acciones de Astro
                    const { data: categoriasData } =
                        await actions.getCategorias({});

                    if (categoriasData?.success) {
                        const selectCategoria = document.querySelector(
                            'select[name="categoria"]',
                        ) as HTMLSelectElement;

                        if (selectCategoria) {
                            selectCategoria.innerHTML =
                                '<option value="">Seleccione una categoría</option>';
                            categoriasData.categorias.forEach(
                                (categoria: any) => {
                                    const option =
                                        document.createElement("option");
                                    option.value = categoria.id_cat;
                                    option.textContent = categoria.nom_cat;
                                    selectCategoria.appendChild(option);
                                },
                            );
                        }
                    }

                    // Cargar organizadores usando acciones de Astro
                    const { data: organizadoresData } =
                        await actions.getOrganizadores({});

                    if (organizadoresData?.success) {
                        const selectOrganizador = document.querySelector(
                            'select[name="cedula_organizador"]',
                        ) as HTMLSelectElement;

                        if (selectOrganizador) {
                            selectOrganizador.innerHTML =
                                '<option value="">Seleccione un organizador</option>';
                            organizadoresData.organizadores.forEach(
                                (organizador: any) => {
                                    const option =
                                        document.createElement("option");
                                    option.value = organizador.ced_org;
                                    option.textContent = `${organizador.nom_org1} ${organizador.nom_org2} ${organizador.ape_org1} ${organizador.ape_org2} - ${organizador.ced_org}`;
                                    selectOrganizador.appendChild(option);
                                },
                            );
                        }
                    }

                    // Cargar asignaciones disponibles
                    const { data: asignacionesData } =
                        await actions.getAsignacionesPlantilla({});

                    if (asignacionesData?.success) {
                        const selectAsignacion = document.querySelector(
                            'select[name="id_asignacion"]',
                        ) as HTMLSelectElement;

                        if (selectAsignacion) {
                            selectAsignacion.innerHTML =
                                '<option value="">Seleccione una asignación</option>';
                            asignacionesData.asignaciones.forEach(
                                (asignacion: any) => {
                                    const option =
                                        document.createElement("option");
                                    option.value = asignacion.id_asi;
                                    option.textContent = `${asignacion.nom_asi} - ${asignacion.des_asi}`;
                                    selectAsignacion.appendChild(option);
                                },
                            );
                        }
                    }
                } catch (error) {
                    console.error(
                        "Error al cargar categorías, organizadores y asignaciones:",
                        error,
                    );
                }
            }
            async function abrirModalModificarEvento(
                eventoId: string,
            ): Promise<void> {
                const modal = document.getElementById("modalModificarEvento");
                const form = document.getElementById(
                    "formulario-modificar-evento",
                ) as HTMLFormElement;

                if (!modal || !form) return;

                // Cargar categorías, organizadores y asignaciones dinámicamente
                await cargarCategoriasOrganizadoresYAsignaciones();

                // Obtener todos los eventos del DOM
                const eventosInputs = document.querySelectorAll(
                    'input[name="evento"]',
                );
                const eventos = Array.from(eventosInputs).map((input) =>
                    JSON.parse((input as HTMLInputElement).value),
                );

                const evento = eventos.find(
                    (e: Evento) => e.id_eve === eventoId,
                );

                if (!evento) return;

                // Llenar el formulario con los datos del evento
                const nombre = form.querySelector(
                    'input[name="nombre"]',
                ) as HTMLInputElement;
                const descripcion = form.querySelector(
                    'textarea[name="descripcion"]',
                ) as HTMLTextAreaElement;
                const categoria = form.querySelector(
                    'select[name="categoria"]',
                ) as HTMLSelectElement;
                const area = form.querySelector(
                    'select[name="area"]',
                ) as HTMLSelectElement;
                const precio = form.querySelector(
                    'input[name="precio"]',
                ) as HTMLInputElement;
                const esGratuito = form.querySelector(
                    'select[name="es_gratuito"]',
                ) as HTMLSelectElement;
                const requiereCarta = form.querySelector(
                    'select[name="requiere_carta"]',
                ) as HTMLSelectElement;
                const esDestacado = form.querySelector(
                    'select[name="es_destacado"]',
                ) as HTMLSelectElement;
                const carMotEve = form.querySelector(
                    'textarea[name="car_mot_eve"]',
                ) as HTMLTextAreaElement;
                const fechaInicio = form.querySelector(
                    'input[name="fecha_inicio"]',
                ) as HTMLInputElement;
                const horaInicio = form.querySelector(
                    'input[name="hora_inicio"]',
                ) as HTMLInputElement;
                const fechaFin = form.querySelector(
                    'input[name="fecha_fin"]',
                ) as HTMLInputElement;
                const horaFin = form.querySelector(
                    'input[name="hora_fin"]',
                ) as HTMLInputElement;
                const fechaInicioInscripcion = form.querySelector(
                    'input[name="fecha_inicio_inscripcion"]',
                ) as HTMLInputElement;
                const fechaFinInscripcion = form.querySelector(
                    'input[name="fecha_fin_inscripcion"]',
                ) as HTMLInputElement;
                const duracion = form.querySelector(
                    'input[name="duracion"]',
                ) as HTMLInputElement;
                const ubicacion = form.querySelector(
                    'input[name="ubicacion"]',
                ) as HTMLInputElement;
                const cedulaOrganizador = form.querySelector(
                    'select[name="cedula_organizador"]',
                ) as HTMLSelectElement;
                const idAsignacion = form.querySelector(
                    'select[name="id_asignacion"]',
                ) as HTMLSelectElement;
                const eventoIdInput = form.querySelector(
                    'input[name="evento_id"]',
                ) as HTMLInputElement;
                const eventoImagen = document.getElementById(
                    "evento-imagen",
                ) as HTMLImageElement;

                // Asignar valores
                if (nombre) nombre.value = evento.nom_eve;
                if (descripcion) descripcion.value = evento.des_eve;
                if (categoria) categoria.value = evento.id_cat_eve;
                if (area) area.value = evento.are_eve || "";
                if (precio) precio.value = evento.precio.toString();
                if (esGratuito)
                    esGratuito.value = evento.es_gratuito.toString();
                if (requiereCarta)
                    requiereCarta.value = evento.requiere_carta.toString();
                if (esDestacado)
                    esDestacado.value = evento.es_destacado.toString();
                if (carMotEve) carMotEve.value = evento.car_mot_eve || "";
                if (fechaInicio)
                    fechaInicio.value = new Date(evento.fec_ini_eve)
                        .toISOString()
                        .split("T")[0];
                if (horaInicio) horaInicio.value = evento.hor_ini_eve;
                if (fechaFin && evento.fec_fin_eve)
                    fechaFin.value = new Date(evento.fec_fin_eve)
                        .toISOString()
                        .split("T")[0];
                if (horaFin && evento.hor_fin_eve)
                    horaFin.value = evento.hor_fin_eve;
                if (fechaInicioInscripcion && evento.fec_ini_ins)
                    fechaInicioInscripcion.value = new Date(evento.fec_ini_ins)
                        .toISOString()
                        .split("T")[0];
                if (fechaFinInscripcion && evento.fec_fin_ins)
                    fechaFinInscripcion.value = new Date(evento.fec_fin_ins)
                        .toISOString()
                        .split("T")[0];
                if (duracion && evento.dur_eve)
                    duracion.value = evento.dur_eve.toString();
                if (ubicacion) ubicacion.value = evento.ubi_eve;
                if (cedulaOrganizador)
                    cedulaOrganizador.value = evento.ced_org_eve;
                if (idAsignacion && evento.id_asignacion)
                    idAsignacion.value = evento.id_asignacion;
                if (eventoIdInput) eventoIdInput.value = evento.id_eve;
                if (eventoImagen)
                    eventoImagen.src =
                        evento.img_eve ||
                        "https://via.placeholder.com/300x200?text=Sin+Imagen";

                modal.style.display = "block";
            }

            function cerrarModalModificarEvento(): void {
                const modal = document.getElementById("modalModificarEvento");
                const form = document.getElementById(
                    "formulario-modificar-evento",
                ) as HTMLFormElement;

                if (modal && form) {
                    modal.style.display = "none";
                    form.reset();
                }
            }

            document.addEventListener("DOMContentLoaded", () => {
                const form = document.getElementById(
                    "formulario-modificar-evento",
                ) as HTMLFormElement;
                const fileInput = document.getElementById(
                    "file-upload-modificar",
                ) as HTMLInputElement;
                const fileNameDisplay = document.querySelector(
                    ".file-name",
                ) as HTMLElement;
                const eventoImagen = document.getElementById(
                    "evento-imagen",
                ) as HTMLImageElement; // Manejar cambio de archivo
                if (fileInput && fileNameDisplay && eventoImagen) {
                    fileInput.addEventListener("change", (e: Event) => {
                        const target = e.target as HTMLInputElement;
                        const file = target.files?.[0];

                        if (file && file.type.match("image.*")) {
                            fileNameDisplay.textContent = file.name;
                            const reader = new FileReader();
                            reader.onload = (event) => {
                                if (event.target?.result) {
                                    eventoImagen.src = event.target
                                        .result as string;
                                }
                            };
                            reader.readAsDataURL(file);
                        } else {
                            fileNameDisplay.textContent =
                                "No se ha seleccionado ningún archivo válido";
                        }
                    });
                }

                // Manejar lógica de precio/gratuito
                const esGratuitoSelect = document.querySelector(
                    'select[name="es_gratuito"]',
                ) as HTMLSelectElement;
                const precioInput = document.querySelector(
                    'input[name="precio"]',
                ) as HTMLInputElement;

                if (esGratuitoSelect && precioInput) {
                    function actualizarVisibilidadPrecio() {
                        const esGratuito = esGratuitoSelect.value === "true";
                        if (esGratuito) {
                            precioInput.value = "0";
                            precioInput.disabled = true;
                            precioInput.style.opacity = "0.5";
                        } else {
                            precioInput.disabled = false;
                            precioInput.style.opacity = "1";
                        }
                    }

                    esGratuitoSelect.addEventListener(
                        "change",
                        actualizarVisibilidadPrecio,
                    );
                    // Ejecutar una vez al cargar
                    actualizarVisibilidadPrecio();
                } // Manejar envío del formulario
                if (form) {
                    form.addEventListener("submit", async (e) => {
                        e.preventDefault();

                        const formData = new FormData(form);

                        // Obtener valores y validar
                        const areaValue = formData.get("area") as string;
                        const fechaFin = formData.get("fecha_fin") as string;
                        const horaFin = formData.get("hora_fin") as string;
                        const duracionStr = formData.get("duracion") as string;
                        const carMotEve = formData.get("car_mot_eve") as string;
                        const fechaInicioInscripcion = formData.get(
                            "fecha_inicio_inscripcion",
                        ) as string;
                        const fechaFinInscripcion = formData.get(
                            "fecha_fin_inscripcion",
                        ) as string;
                        const horaInicio = formData.get(
                            "hora_inicio",
                        ) as string;

                        // Convertir horas a formato del backend si es necesario
                        if (horaInicio) {
                            formData.set("hora_inicio", horaInicio);
                        }
                        if (horaFin) {
                            formData.set("hora_fin", horaFin);
                        }

                        // Renombrar campos para que coincidan con la acción
                        if (carMotEve && carMotEve.trim() !== "") {
                            formData.set("carta_motivacion", carMotEve);
                            formData.delete("car_mot_eve");
                        } else {
                            formData.delete("car_mot_eve");
                        }

                        // Verificar si hay asignación seleccionada
                        const idAsignacion = formData.get(
                            "id_asignacion",
                        ) as string;
                        if (idAsignacion && idAsignacion.trim() !== "") {
                            formData.set("asignacion_id", idAsignacion);
                            formData.delete("id_asignacion");
                        } else {
                            formData.delete("id_asignacion");
                        }

                        // Validar que el área sea uno de los valores permitidos
                        const areasPermitidas = [
                            "PRACTICA",
                            "INVESTIGACION",
                            "ACADEMICA",
                            "TECNICA",
                            "INDUSTRIAL",
                            "EMPRESARIAL",
                            "IA",
                            "REDES",
                        ];
                        const areaValida =
                            areaValue && areasPermitidas.includes(areaValue)
                                ? areaValue
                                : undefined;

                        // Limpiar campos vacíos
                        if (!fechaFin || fechaFin.trim() === "") {
                            formData.delete("fecha_fin");
                        }
                        if (!horaFin || horaFin.trim() === "") {
                            formData.delete("hora_fin");
                        }
                        if (!duracionStr || duracionStr.trim() === "") {
                            formData.delete("duracion");
                        }
                        if (!carMotEve || carMotEve.trim() === "") {
                            formData.delete("car_mot_eve");
                        }
                        if (!areaValida) {
                            formData.delete("area");
                        }

                        // Validar fechas de inscripción
                        if (
                            !fechaInicioInscripcion ||
                            fechaInicioInscripcion.trim() === ""
                        ) {
                            await Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: "La fecha de inicio de inscripción es requerida.",
                                confirmButtonColor: "#dc2626",
                            });
                            return;
                        }
                        if (
                            !fechaFinInscripcion ||
                            fechaFinInscripcion.trim() === ""
                        ) {
                            await Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: "La fecha de fin de inscripción es requerida.",
                                confirmButtonColor: "#dc2626",
                            });
                            return;
                        }

                        // Verificar si hay imagen seleccionada
                        const imagenFile = formData.get("imagen") as File;
                        if (!imagenFile || imagenFile.size === 0) {
                            formData.delete("imagen");
                        }

                        try {
                            const { data, error } =
                                await actions.modificarEvento(formData);

                            if (data?.success) {
                                await Swal.fire({
                                    icon: "success",
                                    title: "Éxito",
                                    text: "Evento modificado correctamente.",
                                    confirmButtonColor: "#059669",
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                await Swal.fire({
                                    icon: "error",
                                    title: "Error",
                                    text:
                                        error?.message ||
                                        "No se pudo modificar el evento.",
                                    confirmButtonColor: "#dc2626",
                                });
                            }
                        } catch (error) {
                            console.error("Error:", error);
                            await Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: "Error al procesar la solicitud",
                                confirmButtonColor: "#dc2626",
                            });
                        }
                    });
                } // Asignar funciones al objeto window
                window.abrirModalModificarEvento = abrirModalModificarEvento;
                window.cerrarModalModificarEvento = cerrarModalModificarEvento;
            });
        </script>
    </div>
</div>
