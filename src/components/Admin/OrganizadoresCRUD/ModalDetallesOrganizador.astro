---
import "../../../styles/Admin/ModalDetallesEvento.css";
---

<div id="modalDetallesOrganizador" class="modal">
    <div class="modal-contenido">
        <span class="cerrar" onclick="cerrarModalDetallesOrganizador()">&times;</span>
        <div class="detalles-reserva">
            <h2 id="organizador-nombre">Nombre del Organizador</h2>

            <div class="seccion-detalles">
                <h3>Información General</h3>
                <div class="info-grid">
                    <p>
                        <strong>Cédula:</strong>
                        <span id="organizador-cedula"></span>
                    </p>
                    <p>
                        <strong>Nombres:</strong>
                        <span id="organizador-nombres"></span>
                    </p>
                    <p>
                        <strong>Apellidos:</strong>
                        <span id="organizador-apellidos"></span>
                    </p>
                    <p>
                        <strong>Título Académico:</strong>
                        <span id="organizador-titulo"></span>
                    </p>
                </div>
            </div>

            <div class="seccion-detalles">
                <h3>Eventos que Organiza</h3>
                <div class="info-grid" id="organizador-eventos-lista">
                     <!-- Aquí se listarán los eventos -->
                </div>
            </div>
            </div>
        </div>
    </div>
</div>

<script>
    declare global {
        interface Window {
            cerrarModalDetallesOrganizador: () => void;
            abrirModalDetallesOrganizador: (organizador: any) => void;
        }
    }

    // Definición de la interfaz para el organizador
    interface EventoOrganizador {
        id_eve: string;
        nom_eve: string;
        des_eve?: string;
        fec_ini_eve?: string | Date;
        fec_fin_eve?: string | Date;
        ubi_eve?: string;
        estado_evento?: string;
        es_destacado?: boolean;
        precio?: number;
        es_gratuito?: boolean;
    }

    interface Organizador {
        ced_org: string;
        nom_org1: string;
        nom_org2?: string;
        ape_org1: string;
        ape_org2?: string;
        tit_aca_org: string;
        eventos?: Array<EventoOrganizador> | EventoOrganizador[] | any;
    }

    // Función para cerrar el modal
    function cerrarModalDetallesOrganizador() {
        const modal = document.getElementById("modalDetallesOrganizador");
        if (modal) modal.style.display = "none";
    }

    // Función para abrir el modal y poblar los datos del organizador
    function abrirModalDetallesOrganizador(organizador: Organizador) {
        console.log("ORGANIZADOR QUE LLEGA:", organizador);
        const modal = document.getElementById("modalDetallesOrganizador");
        if (!modal) return;

        poblarModalConDatos(organizador);

        modal.style.display = "block";
    }

    // Función para poblar los datos del organizador en el modal
    function poblarModalConDatos(organizador: Organizador) {
        const modal = document.getElementById("modalDetallesOrganizador");
        if (!modal) return;

        // Nombre completo
        const nombre = modal.querySelector("#organizador-nombre");
        if (nombre && organizador) {
            const nombreCompleto = `${organizador.nom_org1 || ""} ${organizador.nom_org2 || ""} ${organizador.ape_org1 || ""} ${organizador.ape_org2 || ""}`.replace(/\s+/g, " ").trim();
            nombre.textContent = nombreCompleto || "No especificado";
        }

        // Cédula
        const cedula = modal.querySelector("#organizador-cedula");
        if (cedula) {
            cedula.textContent = organizador.ced_org || "No especificada";
        }

        // Nombres
        const nombres = modal.querySelector("#organizador-nombres");
        if (nombres) {
            nombres.textContent = [organizador.nom_org1, organizador.nom_org2].filter(Boolean).join(" ");
        }

        // Apellidos
        const apellidos = modal.querySelector("#organizador-apellidos");
        if (apellidos) {
            apellidos.textContent = [organizador.ape_org1, organizador.ape_org2].filter(Boolean).join(" ");
        }

        // Título académico
        const titulo = modal.querySelector("#organizador-titulo");
        if (titulo) {
            titulo.textContent = organizador.tit_aca_org || "No especificado";
        }

        // Eventos que organiza
        const eventosLista = modal.querySelector("#organizador-eventos-lista");
        if (eventosLista) {
            eventosLista.innerHTML = "";
            
            console.log("Datos del organizador completos:", organizador);
            console.log("Eventos del organizador:", organizador.eventos);
            
            let eventos: EventoOrganizador[] = [];
            
            // Manejo más robusto de los diferentes tipos de datos que pueden llegar
            if (organizador.eventos) {
                if (Array.isArray(organizador.eventos)) {
                    eventos = organizador.eventos;
                } else if (typeof organizador.eventos === "object") {
                    // Si es un objeto, intenta convertirlo a array
                    eventos = Object.values(organizador.eventos);
                }
            }
            
            console.log("Eventos procesados:", eventos);
            
            // Filtra eventos válidos (con nombre)
            eventos = eventos.filter(ev => ev && ev.nom_eve);
            
            if (eventos.length > 0) {
                eventos.forEach((ev: any) => {
                    const eventoDiv = document.createElement("div");
                    eventoDiv.style.cssText = "margin-bottom: 10px; padding: 8px; border-left: 3px solid #007bff; background-color: #f8f9fa;";
                    
                    // Nombre del evento
                    const nombreEvento = ev.nom_eve || "Evento sin nombre";
                    
                    // Fecha de inicio
                    let fechaTexto = "";
                    if (ev.fec_ini_eve) {
                        try {
                            const fechaObj = new Date(ev.fec_ini_eve);
                            if (!isNaN(fechaObj.getTime())) {
                                fechaTexto = fechaObj.toLocaleDateString('es-ES', {
                                    year: 'numeric',
                                    month: 'long',
                                    day: 'numeric'
                                });
                            }
                        } catch (error) {
                            console.log("Error procesando fecha:", error);
                        }
                    }
                    
                    // Estado del evento
                    const estado = ev.estado_evento || "ACTIVO";
                    
                    // Ubicación
                    const ubicacion = ev.ubi_eve || "Ubicación por definir";
                    
                    // Precio
                    let precioTexto = "";
                    if (ev.es_gratuito) {
                        precioTexto = "Gratuito";
                    } else if (ev.precio && ev.precio > 0) {
                        precioTexto = `$${ev.precio}`;
                    } else {
                        precioTexto = "Precio no definido";
                    }
                    
                    eventoDiv.innerHTML = `
                        <strong>${nombreEvento}</strong><br>
                        ${fechaTexto ? `<small><strong>Fecha:</strong> ${fechaTexto}</small><br>` : ''}
                        <small><strong>Estado:</strong> ${estado}</small><br>
                        <small><strong>Ubicación:</strong> ${ubicacion}</small><br>
                        <small><strong>Precio:</strong> ${precioTexto}</small>
                        ${ev.es_destacado ? '<br><small style="color: #ffc107;"><strong>⭐ Evento Destacado</strong></small>' : ''}
                        ${ev.des_eve ? `<br><small style="color: #6c757d;"><em>${ev.des_eve.substring(0, 100)}${ev.des_eve.length > 100 ? '...' : ''}</em></small>` : ''}
                    `;
                    
                    eventosLista.appendChild(eventoDiv);
                });
            } else {
                eventosLista.innerHTML = "<p style='color: #6c757d; font-style: italic;'>No tiene eventos asignados actualmente.</p>";
            }
        }
    }

    // Cerrar modal al hacer clic fuera de él
    window.onclick = function (event) {
        const modal = document.getElementById("modalDetallesOrganizador");
        if (event.target === modal) {
            cerrarModalDetallesOrganizador();
        }
    };

    // Exponer funciones globalmente para que se puedan llamar desde otros scripts
    window.cerrarModalDetallesOrganizador = cerrarModalDetallesOrganizador;
    window.abrirModalDetallesOrganizador = abrirModalDetallesOrganizador;
</script>
