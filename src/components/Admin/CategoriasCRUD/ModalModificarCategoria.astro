---
import "../../../styles/Admin/ModalModificarEvento.css";
---

<style>
    .contenedor-checkboxes {
        margin: 20px 0;
        padding: 15px;
        border: 1px solid #e5e5e5;
        border-radius: 8px;
        background-color: #f9f9f9;
    }

    .contenedor-checkbox {
        display: flex;
        align-items: center;
        margin: 10px 0;
    }

    .contenedor-checkbox input[type="checkbox"] {
        margin-right: 10px;
        width: 18px;
        height: 18px;
        accent-color: #dc2626;
    }

    .contenedor-checkbox label {
        font-size: 14px;
        color: #333;
        cursor: pointer;
    }
</style>

<div id="modalModificarCategoria" class="modal">
    <div class="modal-contenido">
        <span class="cerrar" onclick="cerrarModalModificarCategoria()"
            >&times;</span
        >
        <div class="formulario-completo">
            <form
                class="formulario-modificar-registro"
                method="POST"
                id="formulario-modificar-categoria"
                enctype="multipart/form-data"
            >
                <input type="hidden" name="id_cat" />

                <div class="contenedor-superior">
                    <p class="texto-centrado texto-roja">Modificar Categoría</p>

                    <div class="contenedor-dato">
                        <p class="texto-dato">Nombre</p>
                        <div class="contenedor-input">
                            <input
                                type="text"
                                class="input-dato"
                                name="nom_cat"
                                required
                            />
                        </div>
                    </div>
                    <div class="contenedor-dato">
                        <p class="texto-dato">Descripción</p>
                        <div class="contenedor-input">
                            <textarea
                                class="input-dato"
                                name="des_cat"
                                rows="3"
                                required></textarea>
                        </div>
                    </div>

                    <div class="contenedor-checkboxes">
                        <p class="texto-centrado texto-roja">
                            Configuración de Validación
                        </p>

                        <div class="contenedor-checkbox">
                            <input
                                type="checkbox"
                                id="requiere_puntaje_mod"
                                name="requiere_puntaje"
                                value="true"
                            />
                            <label for="requiere_puntaje_mod"
                                >Requiere puntaje de aprobación</label
                            >
                        </div>

                        <div class="contenedor-checkbox">
                            <input
                                type="checkbox"
                                id="requiere_asistencia_mod"
                                name="requiere_asistencia"
                                value="true"
                            />
                            <label for="requiere_asistencia_mod"
                                >Requiere asistencia mínima</label
                            >
                        </div>

                        <div class="contenedor-checkbox">
                            <input
                                type="checkbox"
                                id="brinda_certificado_mod"
                                name="brinda_certificado"
                                value="true"
                            />
                            <label for="brinda_certificado_mod"
                                >Brinda certificado</label
                            >
                        </div>
                    </div>

                    <div class="contenedor-nombre">
                        <div
                            class="contenedor-dato"
                            id="contenedor-puntaje-mod"
                            style="display: none;"
                        >
                            <p class="texto-dato">Puntaje de Aprobación</p>
                            <div class="contenedor-input">
                                <input
                                    type="number"
                                    class="input-dato"
                                    name="pun_apr_cat"
                                    min="7"
                                    max="10"
                                    step="0.1"
                                />
                                <p>/10</p>
                            </div>
                        </div>

                        <div
                            class="contenedor-dato"
                            id="contenedor-asistencia-mod"
                            style="display: none;"
                        >
                            <p class="texto-dato">Asistencia para Aprobación</p>
                            <div class="contenedor-input">
                                <input
                                    type="number"
                                    class="input-dato"
                                    name="asi_cat"
                                    min="70"
                                    max="100"
                                />
                                <p>%</p>
                            </div>
                        </div>
                    </div>

                    <div class="contenedor-boton">
                        <button type="submit" class="boton-confirmar">
                            Modificar Categoría
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    import { actions } from "astro:actions";
    import Swal from "sweetalert2";
    interface Categoria {
        id_cat: string;
        nom_cat: string;
        des_cat: string;
        pun_apr_cat: number;
        asi_cat: number;
        requiere_puntaje?: boolean;
        requiere_asistencia?: boolean;
        brinda_certificado?: boolean;
    }

    declare global {
        interface Window {
            abrirModalModificarCategoria: (categoriaId: string) => void;
            cerrarModalModificarCategoria: () => void;
        }
    }

    async function abrirModalModificarCategoria(
        categoriaId: string,
    ): Promise<void> {
        const modal = document.getElementById("modalModificarCategoria");
        const form = document.getElementById(
            "formulario-modificar-categoria",
        ) as HTMLFormElement;

        if (!modal || !form) return;

        // Obtener todas las categorías del DOM
        const categoriasInputs = document.querySelectorAll(
            'input[name="categoria"]',
        );
        const categorias = Array.from(categoriasInputs).map((input) =>
            JSON.parse((input as HTMLInputElement).value),
        );

        const categoria = categorias.find(
            (c: Categoria) => c.id_cat === categoriaId,
        );

        if (!categoria) return; // Llenar el formulario con los datos de la categoría
        const idCat = form.querySelector(
            'input[name="id_cat"]',
        ) as HTMLInputElement;
        const nombre = form.querySelector(
            'input[name="nom_cat"]',
        ) as HTMLInputElement;
        const descripcion = form.querySelector(
            'textarea[name="des_cat"]',
        ) as HTMLTextAreaElement;
        const puntaje = form.querySelector(
            'input[name="pun_apr_cat"]',
        ) as HTMLInputElement;
        const asistencia = form.querySelector(
            'input[name="asi_cat"]',
        ) as HTMLInputElement;
        const requierePuntaje = form.querySelector(
            'input[name="requiere_puntaje"]',
        ) as HTMLInputElement;
        const requiereAsistencia = form.querySelector(
            'input[name="requiere_asistencia"]',
        ) as HTMLInputElement;
        const brindaCertificado = form.querySelector(
            'input[name="brinda_certificado"]',
        ) as HTMLInputElement; // Asignar valores
        if (idCat) idCat.value = categoria.id_cat;
        if (nombre) nombre.value = categoria.nom_cat;
        if (descripcion) descripcion.value = categoria.des_cat;
        if (puntaje) puntaje.value = categoria.pun_apr_cat.toString();
        if (asistencia) asistencia.value = categoria.asi_cat.toString();
        if (requierePuntaje)
            requierePuntaje.checked = categoria.requiere_puntaje || false;
        if (requiereAsistencia)
            requiereAsistencia.checked = categoria.requiere_asistencia || false;
        if (brindaCertificado)
            brindaCertificado.checked = categoria.brinda_certificado || false;

        // Mostrar/ocultar campos según checkboxes
        const contenedorPuntajeMod = document.getElementById(
            "contenedor-puntaje-mod",
        ) as HTMLElement;
        const contenedorAsistenciaMod = document.getElementById(
            "contenedor-asistencia-mod",
        ) as HTMLElement;
        
        document.getElementById("requiere_puntaje_mod")?.dispatchEvent(new Event('change'));
        document.getElementById("requiere_asistencia_mod")?.dispatchEvent(new Event('change'));

        modal.style.display = "block";
    }
    function cerrarModalModificarCategoria(): void {
        const modal = document.getElementById("modalModificarCategoria");
        const form = document.getElementById(
            "formulario-modificar-categoria",
        ) as HTMLFormElement;

        if (modal && form) {
            modal.style.display = "none";
            form.reset();
            // Resetear visibilidad de campos
            const contenedorPuntajeMod = document.getElementById(
                "contenedor-puntaje-mod",
            ) as HTMLElement;
            const contenedorAsistenciaMod = document.getElementById(
                "contenedor-asistencia-mod",
            ) as HTMLElement;
            if (contenedorPuntajeMod)
                contenedorPuntajeMod.style.display = "none";
            if (contenedorAsistenciaMod)
                contenedorAsistenciaMod.style.display = "none";
        }
    }
    document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById(
            "formulario-modificar-categoria",
        ) as HTMLFormElement;

        // Referencias a los checkboxes y contenedores para modificar
        const requierePuntajeCheckbox = document.getElementById("requiere_puntaje_mod") as HTMLInputElement;
        const requiereAsistenciaCheckbox = document.getElementById("requiere_asistencia_mod") as HTMLInputElement;
        const contenedorPuntaje = document.getElementById("contenedor-puntaje-mod") as HTMLElement;
        const contenedorAsistencia = document.getElementById("contenedor-asistencia-mod") as HTMLElement;
        const inputPuntaje = form.querySelector('input[name="pun_apr_cat"]') as HTMLInputElement;
        const inputAsistencia = form.querySelector('input[name="asi_cat"]') as HTMLInputElement;

        // Función para toggle de campos en modificar
        function actualizarEstadoPuntaje() {
            const isChecked = requierePuntajeCheckbox.checked;
            contenedorPuntaje.style.display = isChecked ? "block" : "none";
            inputPuntaje.required = isChecked;
            inputPuntaje.disabled = !isChecked; // La clave: deshabilita si no está marcado
        }

        function actualizarEstadoAsistencia() {
            const isChecked = requiereAsistenciaCheckbox.checked;
            contenedorAsistencia.style.display = isChecked ? "block" : "none";
            inputAsistencia.required = isChecked;
            inputAsistencia.disabled = !isChecked; // La clave: deshabilita si no está marcado
        }

        // Event listeners para los checkboxes
        requierePuntajeCheckbox.addEventListener("change", actualizarEstadoPuntaje);
        requiereAsistenciaCheckbox.addEventListener("change", actualizarEstadoAsistencia);

        // Manejar envío del formulario
        if (form) {
            form.addEventListener("submit", async (e) => {
                e.preventDefault();

                const formData = new FormData(form);

                try {
                    const { data, error } =
                        await actions.modificarCategoria(formData);

                    if (data?.success) {
                        await Swal.fire({
                            icon: "success",
                            title: "Éxito",
                            text: "Categoría modificada correctamente.",
                            confirmButtonColor: "#059669",
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        await Swal.fire({
                            icon: "error",
                            title: "Error",
                            text:
                                data?.message ||
                                error?.message ||
                                "No se pudo modificar la categoría.",
                            confirmButtonColor: "#dc2626",
                        });
                    }
                } catch (error) {
                    console.error("Error:", error);
                    await Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "Error al procesar la solicitud",
                        confirmButtonColor: "#dc2626",
                    });
                }
            });
        }

        // Asignar funciones al objeto window
        window.abrirModalModificarCategoria = abrirModalModificarCategoria;
        window.cerrarModalModificarCategoria = cerrarModalModificarCategoria;
    });
</script>
