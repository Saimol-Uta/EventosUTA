---
import "../../../styles/Admin/ModalModificarEvento.css";
import { actions } from "astro:actions";

// Obtener carreras para el select
const { data: carrerasData } = await Astro.callAction(
    actions.getAllCarreras,
    {},
);
const carreras = carrerasData?.carreras || [];
---

<div id="modalModificarUsuario" class="modal">
    <div class="modal-contenido">
        <span class="cerrar" onclick="cerrarModalModificarUsuario()"
            >&times;</span
        >
        <div class="formulario-completo">
            <form
                class="formulario-modificar-registro"
                method="POST"
                id="formulario-modificar-usuario"
                enctype="multipart/form-data"
            >
                <input type="hidden" name="cor_cue_original" />
                <div class="contenedor-superior">
                    <p class="texto-centrado texto-roja">
                        Información Personal
                    </p>

                    <div class="contenedor-dato">
                        <p class="texto-dato">Correo Electrónico (ID)</p>
                        <div class="contenedor-input">
                            <input
                                type="email"
                                class="input-dato"
                                name="cor_cue"
                                readonly
                                style="background-color: #f3f4f6; color: #6b7280;"
                            />
                        </div>
                    </div>

                    <div class="contenedor-dato">
                        <p class="texto-dato">
                            Cédula <span style="color: red;">*</span>
                        </p>
                        <div class="contenedor-input">
                            <input
                                type="text"
                                class="input-dato"
                                name="ced_usu"
                                id="modificar-cedula-input"
                                required
                                pattern="[0-9]{10}"
                                title="Cédula de 10 dígitos"
                                maxlength="10"
                            />
                        </div>
                    </div>

                    <div class="contenedor-nombre">
                        <div class="contenedor-dato">
                            <p class="texto-dato">
                                Primer Nombre <span style="color: red;">*</span>
                            </p>
                            <div class="contenedor-input">
                                <input
                                    type="text"
                                    class="input-dato"
                                    name="nom_usu1"
                                    id="modificar-nombre1-input"
                                    required
                                    maxlength="20"
                                />
                            </div>
                        </div>
                        <div class="contenedor-dato">
                            <p class="texto-dato">Segundo Nombre</p>
                            <div class="contenedor-input">
                                <input
                                    type="text"
                                    class="input-dato"
                                    name="nom_usu2"
                                    id="modificar-nombre2-input"
                                    maxlength="20"
                                />
                            </div>
                        </div>
                    </div>

                    <div class="contenedor-nombre">
                        <div class="contenedor-dato">
                            <p class="texto-dato">
                                Primer Apellido <span style="color: red;"
                                    >*</span
                                >
                            </p>
                            <div class="contenedor-input">
                                <input
                                    type="text"
                                    class="input-dato"
                                    name="ape_usu1"
                                    id="modificar-apellido1-input"
                                    required
                                    maxlength="20"
                                />
                            </div>
                        </div>
                        <div class="contenedor-dato">
                            <p class="texto-dato">Segundo Apellido</p>
                            <div class="contenedor-input">
                                <input
                                    type="text"
                                    class="input-dato"
                                    name="ape_usu2"
                                    id="modificar-apellido2-input"
                                    maxlength="20"
                                />
                            </div>
                        </div>
                    </div>

                    <div class="contenedor-dato">
                        <p class="texto-dato">
                            Fecha de Nacimiento <span style="color: red;"
                                >*</span
                            >
                        </p>
                        <div class="contenedor-input">
                            <input
                                type="date"
                                class="input-dato"
                                name="fec_nac_usu"
                                id="modificar-fecha-nacimiento-input"
                                required
                            />
                        </div>
                    </div>

                    <div class="contenedor-dato">
                        <p class="texto-dato">Número de Teléfono</p>
                        <div class="contenedor-input">
                            <input
                                type="tel"
                                class="input-dato"
                                name="num_tel_usu"
                                id="modificar-telefono-input"
                                pattern="[0-9]{10}"
                                title="Número de teléfono de 10 dígitos"
                                maxlength="10"
                            />
                        </div>
                    </div>

                    <p
                        class="texto-centrado texto-roja"
                        style="margin-top: 20px;"
                    >
                        Información Académica
                    </p>

                    <div class="contenedor-dato">
                        <p class="texto-dato">
                            Rol del Usuario <span style="color: red;">*</span>
                        </p>
                        <div class="contenedor-input">
                            <select name="rol_cue" id="modificar-rol-select" class="input-dato" required>
                                <option value="">Seleccione un rol</option>
                                <option value="ADMINISTRADOR">Administrador</option>
                                <option value="ESTUDIANTE">Estudiante</option>
                                <option value="USUARIO">Usuario</option>
                            </select>
                        </div>
                    </div>

                    <div class="contenedor-dato" id="modificar-contenedor-carrera" style="display: none;">
                        <p class="texto-dato">Carrera</p>
                        <div class="contenedor-input">
                            <select name="id_car_per" class="input-dato">
                                <option value="">Seleccione una carrera</option>
                                {
                                    carreras.map((carrera: any) => (
                                        <option value={carrera.id_car}>
                                            {carrera.nom_car}{" "}
                                            {carrera.cod_car
                                                ? `(${carrera.cod_car})`
                                                : ""}
                                        </option>
                                    ))
                                }
                            </select>
                        </div>
                    </div>

                    <!-- <p
                        class="texto-centrado texto-roja"
                        style="margin-top: 20px;"
                    >
                        Documentos y Enlaces
                    </p> -->

                    <div class="contenedor-dato" style="display: none;">
                        <p class="texto-dato">Enlace Cédula</p>
                        <div class="contenedor-input">
                            <input
                                type="url"
                                class="input-dato"
                                name="enl_ced_cue"
                                placeholder="URL del documento de cédula"
                            />
                        </div>
                    </div>

                    <div class="contenedor-dato" style="display: none;">
                        <p class="texto-dato">Enlace Matrícula</p>
                        <div class="contenedor-input">
                            <input
                                type="url"
                                class="input-dato"
                                name="enl_mat_cue"
                                placeholder="URL del documento de matrícula"
                            />
                        </div>
                    </div>

                    <div class="contenedor-dato" style="display: none;">
                        <p class="texto-dato">Imagen de Perfil</p>
                        <div class="contenedor-input">
                            <input
                                type="url"
                                class="input-dato"
                                name="img_user"
                                placeholder="URL de la imagen de perfil"
                            />
                        </div>
                    </div>

                    <p
                        class="texto-centrado texto-roja"
                        style="margin-top: 20px;"
                    >
                        Seguridad
                    </p>

                    <div class="contenedor-dato">
                        <p class="texto-dato">Nueva Contraseña</p>
                        <div class="contenedor-input">
                            <input
                                type="password"
                                class="input-dato"
                                name="cont_cuenta"
                                id="modificar-password-input"
                                placeholder="Dejar vacío para mantener la actual"
                                minlength="6"
                            />
                        </div>
                        <small style="color: #6b7280; font-size: 12px;">
                            Dejar vacío para mantener la contraseña actual
                        </small>
                        <!-- Lista de criterios para la nueva contraseña -->
                        <div id="modificar-password-criteria" class="password-criteria-container">
                            <p id="modificar-length-check" class="invalid">❌ Mínimo 6 caracteres</p>
                            <p id="modificar-lower-check" class="invalid">❌ Una letra minúscula (a-z)</p>
                            <p id="modificar-upper-check" class="invalid">❌ Una letra mayúscula (A-Z)</p>
                            <p id="modificar-number-check" class="invalid">❌ Un número (0-9)</p>
                            <p id="modificar-special-check" class="invalid">❌ Un caracter especial (ej: !@#$.,-_?)</p>
                        </div>
                    </div>

                    <div class="contenedor-boton-modificar">
                        <button
                            type="button"
                            class="boton-modificar"
                            onclick="cerrarModalModificarUsuario()"
                            style="background-color: #6b7280;"
                        >
                            Cancelar
                        </button>
                        <button type="submit" class="boton-modificar">
                            Modificar Usuario
                        </button>
                    </div>
                </div>
            </form>
        </div>
        <script>
        declare global {
            interface Window {
                abrirModalModificarUsuario: (usuarioId: string) => void;
                cerrarModalModificarUsuario: () => void;
            }
        }

        // Interfaz para el objeto de usuario
        interface Usuario {
            cor_cue: string;
            ced_usu?: string | null;
            nom_usu1?: string | null;
            nom_usu2?: string | null;
            ape_usu1?: string | null;
            ape_usu2?: string | null;
            fec_nac_usu?: string | null;
            num_tel_usu?: string | null;
            id_car_per?: string | null;
            rol_cue?: string | null;
        }
        
        // Función de validación de cédula
        function validarCedula(cedula: string): boolean {
            if (!/^\d{10}$/.test(cedula)) return false;
            const provincia = parseInt(cedula.substring(0, 2), 10);
            if (provincia < 1 || provincia > 24) return false;
            const digitos = cedula.split("").map(Number);
            const digitoVerificador = digitos[9];
            let suma = 0;
            for (let i = 0; i < 9; i++) {
                let val = digitos[i];
                if (i % 2 === 0) {
                    val *= 2;
                    if (val > 9) val -= 9;
                }
                suma += val;
            }
            const decenaSuperior = Math.ceil(suma / 10) * 10;
            let digitoCalculado = decenaSuperior - suma;
            if (digitoCalculado === 10) digitoCalculado = 0;
            return digitoVerificador === digitoCalculado;
        }

        // Función para mostrar/ocultar el campo de carrera
        function toggleCarreraField(rol: string): void {
            const carreraContainer = document.getElementById("modificar-contenedor-carrera");
            if (carreraContainer) {
                carreraContainer.style.display = rol === 'ESTUDIANTE' ? 'block' : 'none';
            }
        }

        // Funciones del modal
        async function abrirModalModificarUsuario(usuarioId: string): Promise<void> {
            const modal = document.getElementById("modalModificarUsuario");
            const form = document.getElementById("formulario-modificar-usuario") as HTMLFormElement;
            if (!modal || !form) return;

            const usuariosInputs = document.querySelectorAll('input[name="usuario"]');
            const usuarios: Usuario[] = Array.from(usuariosInputs).map((input) => JSON.parse((input as HTMLInputElement).value));
            const usuario = usuarios.find((u) => u.cor_cue === usuarioId);

            if (!usuario) return;

            // Llenar el formulario
            (form.querySelector('input[name="cor_cue_original"]') as HTMLInputElement).value = usuario.cor_cue || "";
            (form.querySelector('input[name="cor_cue"]') as HTMLInputElement).value = usuario.cor_cue || "";
            (form.querySelector('input[name="ced_usu"]') as HTMLInputElement).value = usuario.ced_usu || "";
            (form.querySelector('input[name="nom_usu1"]') as HTMLInputElement).value = usuario.nom_usu1 || "";
            (form.querySelector('input[name="nom_usu2"]') as HTMLInputElement).value = usuario.nom_usu2 || "";
            (form.querySelector('input[name="ape_usu1"]') as HTMLInputElement).value = usuario.ape_usu1 || "";
            (form.querySelector('input[name="ape_usu2"]') as HTMLInputElement).value = usuario.ape_usu2 || "";
            const fechaNacimientoInput = form.querySelector('input[name="fec_nac_usu"]') as HTMLInputElement;
            if (fechaNacimientoInput && usuario.fec_nac_usu) {
                fechaNacimientoInput.value = new Date(usuario.fec_nac_usu).toISOString().split("T")[0];
            }
            (form.querySelector('input[name="num_tel_usu"]') as HTMLInputElement).value = usuario.num_tel_usu || "";
            const rolSelect = form.querySelector('select[name="rol_cue"]') as HTMLSelectElement;
            if(rolSelect) rolSelect.value = usuario.rol_cue || "";
            const carreraSelect = form.querySelector('select[name="id_car_per"]') as HTMLSelectElement;
            if(carreraSelect) carreraSelect.value = usuario.id_car_per || "";
            
            // Disparar lógica de UI
            toggleCarreraField(rolSelect.value);
            modal.style.display = "block";
        }

        function cerrarModalModificarUsuario(): void {
            const modal = document.getElementById("modalModificarUsuario");
            const form = document.getElementById("formulario-modificar-usuario") as HTMLFormElement;
            if (modal && form) {
                modal.style.display = "none";
                form.reset();
                const passwordCriteriaContainer = document.getElementById("modificar-password-criteria");
                if(passwordCriteriaContainer) passwordCriteriaContainer.classList.remove('visible');
            }
        }

        document.addEventListener("DOMContentLoaded", () => {
            // --- SELECCIÓN DE ELEMENTOS ---
            const form = document.getElementById("formulario-modificar-usuario") as HTMLFormElement;
            const cedulaInput = document.getElementById("modificar-cedula-input") as HTMLInputElement;
            const telefonoInput = document.getElementById("modificar-telefono-input") as HTMLInputElement;
            const nombre1Input = document.getElementById("modificar-nombre1-input") as HTMLInputElement;
            const nombre2Input = document.getElementById("modificar-nombre2-input") as HTMLInputElement;
            const apellido1Input = document.getElementById("modificar-apellido1-input") as HTMLInputElement;
            const apellido2Input = document.getElementById("modificar-apellido2-input") as HTMLInputElement;
            const fechaNacimientoInput = document.getElementById("modificar-fecha-nacimiento-input") as HTMLInputElement;
            const rolSelect = document.getElementById("modificar-rol-select") as HTMLSelectElement;
            const passwordInput = document.getElementById("modificar-password-input") as HTMLInputElement;
            const passwordCriteriaContainer = document.getElementById("modificar-password-criteria") as HTMLDivElement;
            
            // --- FILTRADO DE ENTRADA ---
            const filtrarSoloNumeros = (event: Event) => { (event.target as HTMLInputElement).value = (event.target as HTMLInputElement).value.replace(/\D/g, ''); };
            const filtrarSoloLetras = (event: Event) => { (event.target as HTMLInputElement).value = (event.target as HTMLInputElement).value.replace(/[^a-zA-ZáéíóúÁÉÍÓÚ\s]/g, ''); };
            
            if(cedulaInput) cedulaInput.addEventListener('input', filtrarSoloNumeros);
            if(telefonoInput) telefonoInput.addEventListener('input', filtrarSoloNumeros);
            if(nombre1Input) nombre1Input.addEventListener('input', filtrarSoloLetras);
            if(nombre2Input) nombre2Input.addEventListener('input', filtrarSoloLetras);
            if(apellido1Input) apellido1Input.addEventListener('input', filtrarSoloLetras);
            if(apellido2Input) apellido2Input.addEventListener('input', filtrarSoloLetras);

            // --- VALIDACIÓN DE FECHA DE NACIMIENTO ---
            if (fechaNacimientoInput) {
                const hoy = new Date();
                const fechaMaxima = new Date(hoy.setFullYear(hoy.getFullYear() - 17)).toISOString().split("T")[0];
                fechaNacimientoInput.setAttribute("max", fechaMaxima);
            }

            // --- LÓGICA DE UI CONDICIONAL (CARRERA) ---
            if (rolSelect) {
                rolSelect.addEventListener('change', (e: Event) => toggleCarreraField((e.target as HTMLSelectElement).value));
            }

            // --- VALIDACIÓN DE CONTRASEÑA (OPCIONAL) ---
            let passwordIsValid = true;
            const passwordChecks = {
                length: document.getElementById("modificar-length-check") as HTMLParagraphElement,
                lower: document.getElementById("modificar-lower-check") as HTMLParagraphElement,
                upper: document.getElementById("modificar-upper-check") as HTMLParagraphElement,
                number: document.getElementById("modificar-number-check") as HTMLParagraphElement,
                special: document.getElementById("modificar-special-check") as HTMLParagraphElement,
            };

            const updateCheckUI = (element: HTMLParagraphElement | null, isValid: boolean) => {
                if (!element) return;
                if (isValid) {
                    element.classList.remove("invalid");
                    element.classList.add("valid");
                    element.textContent = element.textContent?.replace("❌", "✅") || "";
                } else {
                    element.classList.remove("valid");
                    element.classList.add("invalid");
                    element.textContent = element.textContent?.replace("✅", "❌") || "";
                }
            };
            
            const validatePassword = () => {
                const pass = passwordInput.value;
                if (pass === '') {
                    passwordIsValid = true;
                    if(passwordCriteriaContainer) passwordCriteriaContainer.classList.remove('visible');
                    return;
                }
                
                const hasLength = pass.length >= 6;
                const hasLower = /[a-z]/.test(pass);
                const hasUpper = /[A-Z]/.test(pass);
                const hasNumber = /[0-9]/.test(pass);
                const hasSpecial = /[!@#$%^&*_=+\-.,:;?]/.test(pass);

                updateCheckUI(passwordChecks.length, hasLength);
                updateCheckUI(passwordChecks.lower, hasLower);
                updateCheckUI(passwordChecks.upper, hasUpper);
                updateCheckUI(passwordChecks.number, hasNumber);
                updateCheckUI(passwordChecks.special, hasSpecial);

                passwordIsValid = hasLength && hasLower && hasUpper && hasNumber && hasSpecial;
            };

            if (passwordInput && passwordCriteriaContainer) {
                passwordInput.addEventListener('focus', () => {
                    if(passwordInput.value === '') validatePassword();
                    passwordCriteriaContainer.classList.add('visible');
                });
                passwordInput.addEventListener('input', validatePassword);
                passwordInput.addEventListener('blur', () => {
                    if (passwordInput.value === '' || passwordIsValid) {
                        passwordCriteriaContainer.classList.remove('visible');
                    }
                });
            }
            
            // --- MANEJO DEL ENVÍO DEL FORMULARIO ---
            if (form) {
                form.addEventListener("submit", async (e: SubmitEvent) => {
                    e.preventDefault();
                    const { default: Swal } = await import("sweetalert2");
                    const { actions } = await import("astro:actions");

                    const cedula = cedulaInput.value;
                    const contrasena = passwordInput.value;

                    if (!validarCedula(cedula)) {
                        await Swal.fire({ icon: "error", title: "Cédula Inválida", text: "El número de cédula no es válido." });
                        return;
                    }
                    
                    if (contrasena !== '') {
                        validatePassword();
                        if (!passwordIsValid) {
                            await Swal.fire({ icon: "error", title: "Contraseña no válida", text: "La nueva contraseña no cumple los criterios de seguridad." });
                            return;
                        }
                    }

                    Swal.fire({ title: "Actualizando...", allowOutsideClick: false, didOpen: () => Swal.showLoading() });
                    
                    const formData = new FormData(form);
                    const usuarioData = {
                        cor_cue: formData.get("cor_cue_original") as string,
                        ced_usu: (formData.get("ced_usu") as string) || undefined,
                        nom_usu1: (formData.get("nom_usu1") as string) || undefined,
                        nom_usu2: (formData.get("nom_usu2") as string) || undefined,
                        ape_usu1: (formData.get("ape_usu1") as string) || undefined,
                        ape_usu2: (formData.get("ape_usu2") as string) || undefined,
                        fec_nac_usu: (formData.get("fec_nac_usu") as string) || undefined,
                        num_tel_usu: (formData.get("num_tel_usu") as string) || undefined,
                        id_car_per: (formData.get("id_car_per") as string) || undefined,
                        rol_cue: (formData.get("rol_cue") as string) || undefined,
                        cont_cuenta: contrasena || undefined,
                    };

                    const { data, error } = await actions.actualizarUsuario(usuarioData);

                    if (data?.success) {
                        await Swal.fire({ icon: "success", title: "Éxito", text: data.message });
                        window.location.reload();
                    } else {
                        await Swal.fire({ icon: "error", title: "Error", text: data?.message || error?.message });
                    }
                });
            }
            
            window.abrirModalModificarUsuario = abrirModalModificarUsuario;
            window.cerrarModalModificarUsuario = cerrarModalModificarUsuario;
        });
    </script>
    </div>
</div>

<style>

    .password-criteria-container {
        opacity: 0;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.4s ease-out, opacity 0.3s ease-in;
        margin-top: 8px;
        padding-left: 5px;
    }

    .password-criteria-container.visible {
        opacity: 1;
        max-height: 10rem;
        transition: max-height 0.4s ease-in, opacity 0.3s ease-out 0.1s;
    }

    .password-criteria-container p {
        font-size: 13px;
        margin: 4px 0;
        transition: color 0.3s ease;
    }

    .password-criteria-container p.invalid {
        color: #9ca3af;
    }

    .password-criteria-container p.valid {
        color: #059669;
        font-weight: 500;
    }

    /* Estilos específicos para el modal de modificar usuario */
    .modal-contenido {
        max-height: 90vh;
        overflow-y: auto;
        width: 90%;
        max-width: 600px;
    }

    .contenedor-superior {
        padding: 20px;
    }

    .texto-centrado.texto-roja {
        font-size: 18px;
        font-weight: 600;
        margin: 20px 0 15px 0;
        padding: 10px;
        background: linear-gradient(135deg, #b01025, #d42c44);
        color: white;
        border-radius: 8px;
        text-align: center;
    }

    .contenedor-dato {
        margin-bottom: 15px;
    }

    .texto-dato {
        font-weight: 600;
        margin-bottom: 5px;
        color: #374151;
    }

    .input-dato,
    select.input-dato {
        width: 100%;
        padding: 10px 12px;
        border: 2px solid #e5e7eb;
        border-radius: 6px;
        font-size: 14px;
        transition: border-color 0.2s ease;
    }

    .input-dato:focus,
    select.input-dato:focus {
        outline: none;
        border-color: #b01025;
        box-shadow: 0 0 0 3px rgba(176, 16, 37, 0.1);
    }

    .input-dato:read-only {
        background-color: #f3f4f6;
        color: #6b7280;
        cursor: not-allowed;
    }

    .contenedor-nombre {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 15px;
    }

    .contenedor-boton-modificar {
        display: flex;
        gap: 10px;
        justify-content: flex-end;
        margin-top: 30px;
        padding-top: 20px;
        border-top: 1px solid #e5e7eb;
    }

    .boton-modificar {
        padding: 12px 24px;
        border: none;
        border-radius: 6px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
        min-width: 120px;
    }

    .boton-modificar[type="submit"] {
        background-color: #b01025;
        color: white;
    }

    .boton-modificar[type="submit"]:hover {
        background-color: #8e0d1f;
        transform: translateY(-1px);
    }

    .boton-modificar:not([type="submit"]) {
        background-color: #6b7280;
        color: white;
    }

    .boton-modificar:not([type="submit"]):hover {
        background-color: #4b5563;
    }

    /* Responsive */
    @media (max-width: 768px) {
        .modal-contenido {
            width: 95%;
            margin: 10px;
        }

        .contenedor-nombre {
            grid-template-columns: 1fr;
        }

        .contenedor-boton-modificar {
            flex-direction: column;
        }

        .texto-centrado.texto-roja {
            font-size: 16px;
            margin: 15px 0 10px 0;
            padding: 8px;
        }
    }

    /* Validación visual */
    .input-dato:invalid {
        border-color: #dc2626;
    }

    .input-dato:valid {
        border-color: #059669;
    }

    /* Estilos para campos requeridos */
    span[style*="color: red"] {
        font-weight: bold;
    } /* Mejorar el estilo de los selects */
    select.input-dato {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
        background-position: right 8px center;
        background-repeat: no-repeat;
        background-size: 16px;
        padding-right: 40px;
        appearance: none;
        cursor: pointer;
    }

    /* Asegurar que los selects de rol y carrera tengan cursor pointer */
    select[name="rol_cue"],
    select[name="id_car_per"] {
        cursor: pointer !important;
    }

    /* Evitar cursor not-allowed en selects */
    select.input-dato:not(:disabled) {
        cursor: pointer !important;
    }

    /* Mejoras para los hints */
    small {
        display: block;
        margin-top: 4px;
        font-style: italic;
    }
</style>
