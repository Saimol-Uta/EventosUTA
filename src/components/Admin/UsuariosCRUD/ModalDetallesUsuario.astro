---
import "../../../styles/Admin/ModalDetallesEvento.css";
---

<div id="modalDetallesUsuario" class="modal">
    <div class="modal-contenido">
        <span class="cerrar" onclick="cerrarModalDetallesUsuario()"
            >&times;</span
        >
        <div class="detalles-reserva">
            <h2 id="usuario-nombre">Nombre del Usuario</h2>
            <div class="seccion-detalles">
                <h3>Informaci√≥n Personal</h3>
                <div class="info-grid">
                    <p>
                        <strong>Correo Electr√≥nico:</strong>
                        <span id="usuario-correo">Cargando...</span>
                    </p>
                    <p>
                        <strong>C√©dula:</strong>
                        <span id="usuario-cedula">Cargando...</span>
                    </p>
                    <p>
                        <strong>Primer Nombre:</strong>
                        <span id="usuario-primer-nombre">Cargando...</span>
                    </p>
                    <p>
                        <strong>Segundo Nombre:</strong>
                        <span id="usuario-segundo-nombre">Cargando...</span>
                    </p>
                    <p>
                        <strong>Primer Apellido:</strong>
                        <span id="usuario-primer-apellido">Cargando...</span>
                    </p>
                    <p>
                        <strong>Segundo Apellido:</strong>
                        <span id="usuario-segundo-apellido">Cargando...</span>
                    </p>
                    <p>
                        <strong>Fecha de Nacimiento:</strong>
                        <span id="usuario-fec-nac">Cargando...</span>
                    </p>
                    <p>
                        <strong>Edad:</strong>
                        <span id="usuario-edad">Cargando...</span>
                    </p>
                    <p>
                        <strong>N√∫mero de Tel√©fono:</strong>
                        <span id="usuario-numero">Cargando...</span>
                    </p>
                    <p>
                        <strong>Rol:</strong>
                        <span id="usuario-rol">Cargando...</span>
                    </p>
                </div>
            </div>

            <div class="seccion-detalles">
                <h3>Informaci√≥n Acad√©mica</h3>
                <div class="info-grid">
                    <p>
                        <strong>Carrera:</strong>
                        <span id="usuario-carrera">Cargando...</span>
                    </p>
                    <p>
                        <strong>C√≥digo de Carrera:</strong>
                        <span id="usuario-carrera-codigo">Cargando...</span>
                    </p>
                    <p>
                        <strong>Facultad:</strong>
                        <span id="usuario-facultad">Cargando...</span>
                    </p>
                    <p>
                        <strong>Descripci√≥n de Carrera:</strong>
                        <span id="usuario-carrera-descripcion">Cargando...</span
                        >
                    </p>
                </div>
            </div>

            <div class="seccion-detalles">
                <h3>Documentos y Enlaces</h3>
                <div class="info-grid">
                    <p>
                        <strong>Enlace C√©dula:</strong>
                        <span id="usuario-enlace-cedula">
                            <a
                                id="link-cedula"
                                href="#"
                                target="_blank"
                                style="display: none; color: #b01025; text-decoration: none;"
                                >üìÑ Ver Documento</a
                            >
                            <span id="no-cedula" style="color: #6b7280;"
                                >No disponible</span
                            >
                        </span>
                    </p>
                    <p>
                        <strong>Enlace Matr√≠cula:</strong>
                        <span id="usuario-enlace-matricula">
                            <a
                                id="link-matricula"
                                href="#"
                                target="_blank"
                                style="display: none; color: #b01025; text-decoration: none;"
                                >üìÑ Ver Documento</a
                            >
                            <span id="no-matricula" style="color: #6b7280;"
                                >No disponible</span
                            >
                        </span>
                    </p>
                    <p>
                        <strong>Imagen de Perfil:</strong>
                        <span id="usuario-imagen-perfil">
                            <a
                                id="link-imagen"
                                href="#"
                                target="_blank"
                                style="display: none; color: #b01025; text-decoration: none;"
                                >üñºÔ∏è Ver Imagen</a
                            >
                            <span id="no-imagen" style="color: #6b7280;"
                                >No disponible</span
                            >
                        </span>
                    </p>
                </div>
            </div>

            <div class="seccion-detalles">
                <h3>Actividad del Usuario</h3>
                <div class="info-grid">
                    <p>
                        <strong>Inscripciones:</strong>
                        <span id="usuario-inscripciones-count">0</span>
                    </p>
                    <p>
                        <strong>Solicitudes de Cambio:</strong>
                        <span id="usuario-cambios-count">0</span>
                    </p>
                </div>

                <div class="contenedor-dato">
                    <div class="contenedor-botones-asignaciones">
                        <button
                            type="button"
                            id="btn-ver-inscripciones"
                            class="boton-asignacion"
                            onclick="verInscripcionesUsuario()"
                        >
                            üìã Ver Inscripciones Detalladas
                        </button>
                        <button
                            type="button"
                            id="btn-ver-cambios"
                            class="boton-asignacion"
                            onclick="verCambiosUsuario()"
                        >
                            üìù Ver Solicitudes de Cambio
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .info-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 15px;
        margin: 10px 0;
    }

    .info-grid p {
        margin: 5px 0;
    }

    .boton-asignacion {
        margin: 5px 0;
        width: 100%;
        padding: 10px 15px;
        border: none;
        border-radius: 6px;
        background-color: #b01025;
        color: white;
        cursor: pointer;
        transition: background-color 0.2s ease;
        font-size: 14px;
    }

    .boton-asignacion:hover {
        background-color: #880f1f;
    }

    .contenedor-botones-asignaciones {
        margin: 5px 0;
        display: flex;
        gap: 10px;
    }

    .seccion-detalles {
        margin: 20px 0;
        padding: 15px;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        background-color: #f9f9f9;
    }

    .seccion-detalles h3 {
        margin: 0 0 10px 0;
        color: #b01025;
        font-size: 16px;
    }

    .rol-badge {
        display: inline-block;
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
        color: white;
        text-align: center;
        min-width: 80px;
    }

    .rol-admin,
    .rol-administrador {
        background-color: #dc2626;
    }

    .rol-organizador {
        background-color: #ea580c;
    }

    .rol-estudiante {
        background-color: #059669;
    }

    .rol-docente {
        background-color: #0284c7;
    }

    .rol-badge:not(.rol-admin):not(.rol-administrador):not(
            .rol-organizador
        ):not(.rol-estudiante):not(.rol-docente) {
        background-color: #6b7280;
    }

    @media (max-width: 768px) {
        .info-grid {
            grid-template-columns: 1fr;
        }

        .contenedor-botones-asignaciones {
            flex-direction: column;
        }
    }
</style>

<script>
    declare global {
        interface Window {
            cerrarModalDetallesUsuario: () => void;
            abrirModalDetallesUsuario: (usuario: any) => void;
            verInscripcionesUsuario: () => void;
            verCambiosUsuario: () => void;
        }
    }

    // Variable global para almacenar el usuario actual
    let usuarioActual: any = null;

    function cerrarModalDetallesUsuario() {
        const modal = document.getElementById("modalDetallesUsuario");
        if (modal) modal.style.display = "none";
    }

    async function abrirModalDetallesUsuario(usuario: any) {
        const modal = document.getElementById("modalDetallesUsuario");
        if (!modal) return;

        // Almacenar el usuario actual globalmente
        usuarioActual = usuario;

        // Poblar el modal con los datos del usuario
        await poblarModalConDatos(usuario);

        modal.style.display = "block";
    }
    async function verInscripcionesUsuario() {
        if (!usuarioActual?.cor_cue) {
            console.error("No hay usuario actual o cor_cue");
            return;
        }

        try {
            // Importar m√≥dulos din√°micamente
            const { actions } = await import("astro:actions");
            const { default: Swal } = await import("sweetalert2");

            // Mostrar loading
            Swal.fire({
                title: "Cargando inscripciones...",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                },
            }); // Obtener inscripciones del usuario
            const { data, error } = await actions.getInscripcionesByUser({
                userId: usuarioActual.cor_cue,
            });

            if (error || !data?.success) {
                await Swal.fire({
                    icon: "error",
                    title: "Error",
                    text:
                        data?.message ||
                        "No se pudieron cargar las inscripciones",
                    confirmButtonColor: "#dc2626",
                });
                return;
            }

            const inscripciones = data.data || [];

            if (inscripciones.length === 0) {
                await Swal.fire({
                    icon: "info",
                    title: "Sin inscripciones",
                    text: `${usuarioActual.nom_usu1} ${usuarioActual.ape_usu1} no tiene inscripciones registradas.`,
                    confirmButtonColor: "#059669",
                });
                return;
            } // Crear tabla HTML con las inscripciones
            const inscripcionesHTML = inscripciones
                .map(
                    (ins: any) => `
                <tr>
                    <td>${ins.eventos?.nom_eve || "Sin nombre"}</td>
                    <td>${formatearFecha(ins.fec_ins)}</td>
                    <td><span class="estado-badge estado-${ins.est_ins?.toLowerCase()}">${ins.est_ins || "Sin estado"}</span></td>
                    <td><span class="estado-badge estado-${ins.est_par?.toLowerCase()}">${ins.est_par || "Sin estado"}</span></td>
                    <td>${ins.not_par || "Sin nota"}</td>
                </tr>
            `,
                )
                .join("");

            await Swal.fire({
                title: `Inscripciones de ${usuarioActual.nom_usu1} ${usuarioActual.ape_usu1}`,
                html: `
                    <div style="max-height: 400px; overflow-y: auto;">
                        <table style="width: 100%; border-collapse: collapse;">
                            <thead>
                                <tr style="background-color: #f8f9fa;">
                                    <th style="border: 1px solid #dee2e6; padding: 8px; text-align: left;">Evento</th>
                                    <th style="border: 1px solid #dee2e6; padding: 8px; text-align: left;">Fecha Inscripci√≥n</th>
                                    <th style="border: 1px solid #dee2e6; padding: 8px; text-align: left;">Estado Inscripci√≥n</th>
                                    <th style="border: 1px solid #dee2e6; padding: 8px; text-align: left;">Estado Participaci√≥n</th>
                                    <th style="border: 1px solid #dee2e6; padding: 8px; text-align: left;">Nota</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${inscripcionesHTML}
                            </tbody>
                        </table>
                    </div>
                    <style>
                        .estado-badge {
                            padding: 2px 6px;
                            border-radius: 4px;
                            font-size: 11px;
                            font-weight: 600;
                            text-transform: uppercase;
                        }
                        .estado-activo, .estado-aprobado { background-color: #059669; color: white; }
                        .estado-pendiente { background-color: #f59e0b; color: white; }
                        .estado-rechazado, .estado-inactivo { background-color: #dc2626; color: white; }
                        .estado-asisti√≥, .estado-particip√≥ { background-color: #059669; color: white; }
                        .estado-no_asisti√≥, .estado-no_particip√≥ { background-color: #6b7280; color: white; }
                    </style>
                `,
                width: "80%",
                confirmButtonColor: "#059669",
                confirmButtonText: "Cerrar",
            });
        } catch (error) {
            console.error("Error al obtener inscripciones:", error);
            const { default: Swal } = await import("sweetalert2");
            await Swal.fire({
                icon: "error",
                title: "Error",
                text: "Error al cargar las inscripciones del usuario",
                confirmButtonColor: "#dc2626",
            });
        }
    }

    async function verCambiosUsuario() {
        if (!usuarioActual?.cor_cue) {
            console.error("No hay usuario actual o cor_cue");
            return;
        }

        try {
            // Importar m√≥dulos din√°micamente
            const { actions } = await import("astro:actions");
            const { default: Swal } = await import("sweetalert2");

            // Mostrar loading
            Swal.fire({
                title: "Cargando solicitudes de cambio...",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                },
            }); // Obtener cambios del usuario
            const { data, error } = await actions.getCambiosByUser({
                userId: usuarioActual.cor_cue,
            });

            if (error || !data?.success) {
                await Swal.fire({
                    icon: "error",
                    title: "Error",
                    text:
                        data?.message ||
                        "No se pudieron cargar las solicitudes de cambio",
                    confirmButtonColor: "#dc2626",
                });
                return;
            }

            const cambios = data.data || [];

            if (cambios.length === 0) {
                await Swal.fire({
                    icon: "info",
                    title: "Sin solicitudes",
                    text: `${usuarioActual.nom_usu1} ${usuarioActual.ape_usu1} no tiene solicitudes de cambio registradas.`,
                    confirmButtonColor: "#059669",
                });
                return;
            }

            // Crear tabla HTML con los cambios
            const cambiosHTML = cambios
                .map(
                    (cambio: any) => `
                <tr>
                    <td>${formatearFecha(cambio.fec_cam)}</td>
                    <td>${cambio.tip_cam || "No especificado"}</td>
                    <td style="max-width: 200px; word-wrap: break-word;">${cambio.des_cam || "Sin descripci√≥n"}</td>
                    <td style="max-width: 150px; word-wrap: break-word;">${cambio.mot_cam || "Sin motivo"}</td>
                    <td><span class="estado-badge estado-${cambio.est_cam?.toLowerCase()}">${cambio.est_cam || "Sin estado"}</span></td>
                    <td><span class="prioridad-badge prioridad-${cambio.pri_cam?.toLowerCase()}">${cambio.pri_cam || "Sin prioridad"}</span></td>
                </tr>
            `,
                )
                .join("");

            await Swal.fire({
                title: `Solicitudes de cambio de ${usuarioActual.nom_usu1} ${usuarioActual.ape_usu1}`,
                html: `
                    <div style="max-height: 400px; overflow-y: auto;">
                        <table style="width: 100%; border-collapse: collapse; font-size: 12px;">
                            <thead>
                                <tr style="background-color: #f8f9fa;">
                                    <th style="border: 1px solid #dee2e6; padding: 6px; text-align: left;">Fecha</th>
                                    <th style="border: 1px solid #dee2e6; padding: 6px; text-align: left;">Tipo</th>
                                    <th style="border: 1px solid #dee2e6; padding: 6px; text-align: left;">Descripci√≥n</th>
                                    <th style="border: 1px solid #dee2e6; padding: 6px; text-align: left;">Motivo</th>
                                    <th style="border: 1px solid #dee2e6; padding: 6px; text-align: left;">Estado</th>
                                    <th style="border: 1px solid #dee2e6; padding: 6px; text-align: left;">Prioridad</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${cambiosHTML}
                            </tbody>
                        </table>
                    </div>
                    <style>
                        .estado-badge, .prioridad-badge {
                            padding: 2px 6px;
                            border-radius: 4px;
                            font-size: 10px;
                            font-weight: 600;
                            text-transform: uppercase;
                        }
                        .estado-aprobado, .estado-resuelto { background-color: #059669; color: white; }
                        .estado-pendiente, .estado-en_proceso { background-color: #f59e0b; color: white; }
                        .estado-rechazado, .estado-cancelado { background-color: #dc2626; color: white; }
                        .prioridad-alta { background-color: #dc2626; color: white; }
                        .prioridad-media { background-color: #f59e0b; color: white; }
                        .prioridad-baja { background-color: #059669; color: white; }
                    </style>
                `,
                width: "90%",
                confirmButtonColor: "#059669",
                confirmButtonText: "Cerrar",
            });
        } catch (error) {
            console.error("Error al obtener cambios:", error);
            const { default: Swal } = await import("sweetalert2");
            await Swal.fire({
                icon: "error",
                title: "Error",
                text: "Error al cargar las solicitudes de cambio del usuario",
                confirmButtonColor: "#dc2626",
            });
        }
    }

    // Funci√≥n auxiliar para formatear fechas
    function formatearFecha(fecha: string): string {
        if (!fecha) return "No especificada";
        try {
            return new Intl.DateTimeFormat("es-ES", {
                year: "numeric",
                month: "short",
                day: "numeric",
            }).format(new Date(fecha));
        } catch {
            return fecha;
        }
    }
    async function poblarModalConDatos(usuario: any) {
        const modal = document.getElementById("modalDetallesUsuario");
        if (!modal) return;

        // Actualizar t√≠tulo del modal
        const titulo = modal.querySelector("#usuario-nombre");
        const nombreCompleto =
            `${usuario.nom_usu1} ${usuario.nom_usu2 || ""} ${usuario.ape_usu1} ${usuario.ape_usu2 || ""}`.trim();

        if (titulo) titulo.textContent = nombreCompleto || "Sin nombre";

        // Informaci√≥n Personal
        const correo = modal.querySelector("#usuario-correo");
        if (correo) correo.textContent = usuario.cor_cue || "N/A";

        const cedula = modal.querySelector("#usuario-cedula");
        if (cedula) cedula.textContent = usuario.ced_usu || "N/A";

        const primerNombre = modal.querySelector("#usuario-primer-nombre");
        if (primerNombre) primerNombre.textContent = usuario.nom_usu1 || "N/A";

        const segundoNombre = modal.querySelector("#usuario-segundo-nombre");
        if (segundoNombre)
            segundoNombre.textContent = usuario.nom_usu2 || "N/A";

        const primerApellido = modal.querySelector("#usuario-primer-apellido");
        if (primerApellido)
            primerApellido.textContent = usuario.ape_usu1 || "N/A";

        const segundoApellido = modal.querySelector(
            "#usuario-segundo-apellido",
        );
        if (segundoApellido)
            segundoApellido.textContent = usuario.ape_usu2 || "N/A";

        const fechaNac = modal.querySelector("#usuario-fec-nac");
        if (fechaNac) {
            if (usuario.fec_nac_usu) {
                try {
                    const fecha = new Date(usuario.fec_nac_usu);
                    if (!isNaN(fecha.getTime())) {
                        fechaNac.textContent =
                            fecha.toLocaleDateString("es-ES");
                    } else {
                        fechaNac.textContent = "Fecha inv√°lida";
                    }
                } catch (error) {
                    console.error("Error al procesar fecha:", error);
                    fechaNac.textContent = "Error en fecha";
                }
            } else {
                fechaNac.textContent = "N/A";
            }
        }

        const edad = modal.querySelector("#usuario-edad");
        if (edad) {
            if (usuario.edad !== null && usuario.edad !== undefined) {
                edad.textContent = `${usuario.edad} a√±os`;
            } else {
                edad.textContent = "N/A";
            }
        }

        const telefono = modal.querySelector("#usuario-numero");
        if (telefono)
            telefono.textContent = usuario.num_tel_usu || "No especificado";

        const rol = modal.querySelector("#usuario-rol");
        if (rol) {
            rol.textContent = usuario.rol_cue || "Sin rol";
            rol.className = `rol-badge rol-${(usuario.rol_cue || "").toLowerCase()}`;
        }

        // Informaci√≥n Acad√©mica
        const carrera = modal.querySelector("#usuario-carrera");
        if (carrera)
            carrera.textContent = usuario.carrera?.nom_car || "Sin carrera";

        const carreraCodigo = modal.querySelector("#usuario-carrera-codigo");
        if (carreraCodigo)
            carreraCodigo.textContent = usuario.carrera?.cod_car || "N/A";

        const facultad = modal.querySelector("#usuario-facultad");
        if (facultad) {
            // Aqu√≠ necesitar√≠as obtener la facultad basada en el id_fac_per de la carrera
            facultad.textContent = "Informaci√≥n no disponible"; // Por ahora
        }

        const carreraDescripcion = modal.querySelector(
            "#usuario-carrera-descripcion",
        );
        if (carreraDescripcion)
            carreraDescripcion.textContent = usuario.carrera?.des_car || "N/A";

        // Documentos y Enlaces
        const linkCedula = modal.querySelector(
            "#link-cedula",
        ) as HTMLAnchorElement;
        const noCedula = modal.querySelector("#no-cedula");
        if (usuario.enl_ced_cue) {
            if (linkCedula) {
                linkCedula.href = usuario.enl_ced_cue;
                linkCedula.style.display = "inline";
            }
            if (noCedula) (noCedula as HTMLElement).style.display = "none";
        } else {
            if (linkCedula) linkCedula.style.display = "none";
            if (noCedula) (noCedula as HTMLElement).style.display = "inline";
        }

        const linkMatricula = modal.querySelector(
            "#link-matricula",
        ) as HTMLAnchorElement;
        const noMatricula = modal.querySelector("#no-matricula");
        if (usuario.enl_mat_cue) {
            if (linkMatricula) {
                linkMatricula.href = usuario.enl_mat_cue;
                linkMatricula.style.display = "inline";
            }
            if (noMatricula)
                (noMatricula as HTMLElement).style.display = "none";
        } else {
            if (linkMatricula) linkMatricula.style.display = "none";
            if (noMatricula)
                (noMatricula as HTMLElement).style.display = "inline";
        }

        const linkImagen = modal.querySelector(
            "#link-imagen",
        ) as HTMLAnchorElement;
        const noImagen = modal.querySelector("#no-imagen");
        if (usuario.img_user) {
            if (linkImagen) {
                linkImagen.href = usuario.img_user;
                linkImagen.style.display = "inline";
            }
            if (noImagen) (noImagen as HTMLElement).style.display = "none";
        } else {
            if (linkImagen) linkImagen.style.display = "none";
            if (noImagen) (noImagen as HTMLElement).style.display = "inline";
        }

        // Establecer contadores b√°sicos
        const inscripcionesCount = modal.querySelector(
            "#usuario-inscripciones-count",
        );
        if (inscripcionesCount) {
            inscripcionesCount.textContent =
                usuario.cantidadInscripciones?.toString() || "0";
        }

        const cambiosCount = modal.querySelector("#usuario-cambios-count");
        if (cambiosCount) {
            cambiosCount.textContent =
                usuario.cantidadSolicitudes?.toString() || "0";
        }
    }

    // Cerrar modal al hacer clic fuera de √©l
    window.onclick = function (event) {
        const modal = document.getElementById("modalDetallesUsuario");
        if (event.target === modal) {
            cerrarModalDetallesUsuario();
        }
    };

    // Exponer funciones globalmente
    window.cerrarModalDetallesUsuario = cerrarModalDetallesUsuario;
    window.abrirModalDetallesUsuario = abrirModalDetallesUsuario;
    window.verInscripcionesUsuario = verInscripcionesUsuario;
    window.verCambiosUsuario = verCambiosUsuario;
</script>
