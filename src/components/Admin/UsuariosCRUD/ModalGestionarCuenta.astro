---
import "../../../styles/Admin/ModalGestionarCuenta.css";
---

<!-- Modal para gestionar cuentas de usuario -->
<div id="modalGestionarCuenta" class="modal" style="display: none;">
    <div class="modal-contenido" style="max-width: 700px; width: 90%;">
        <span class="cerrar" onclick="cerrarModalGestionarCuenta()"
            >&times;</span
        >

        <div class="modal-header">
            <h2>Gestionar Cuenta de Usuario</h2>
        </div>

        <form id="formGestionCuenta" class="form-asignacion">
            <div class="form-row">
                <div class="form-group">
                    <label>Correo Electrónico:</label>
                    <div class="contenedor-input">
                        <input
                            type="email"
                            name="correo"
                            id="correoCuenta"
                            disabled
                        />
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="rolCuenta">Rol:</label>
                    <div class="contenedor-input">
                        <select name="rol" id="rolCuenta">
                            <option value="usuario">Usuario</option>
                            <option value="estudiante">Estudiante</option>
                            <option value="administrador">Administrador</option>
                            <option value="master">Master</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="cedulaDocumento">Copia de Cédula:</label>
                    <div class="contenedor-input">
                        <input
                            type="file"
                            name="cedula"
                            id="cedulaDocumento"
                            accept=".pdf,.jpg,.png"
                        />
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="certificadoMatricula"
                        >Certificado de Matrícula:</label
                    >
                    <div class="contenedor-input">
                        <input
                            type="file"
                            name="certificado"
                            id="certificadoMatricula"
                            accept=".pdf,.jpg,.png"
                        />
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="cartaCompromiso">Carta de Compromiso:</label>
                    <div class="contenedor-input">
                        <input
                            type="file"
                            name="carta"
                            id="cartaCompromiso"
                            accept=".pdf,.jpg,.png"
                        />
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="imagenPerfil">Imagen de Perfil:</label>
                    <div class="contenedor-input">
                        <input
                            type="file"
                            name="imagen"
                            id="imagenPerfil"
                            accept="image/*"
                        />
                    </div>
                </div>
            </div>

            <div class="form-actions">
                <div>
                    <button type="button" class="btn-eliminar"
                        >Eliminar Cuenta</button
                    >
                </div>

                <div>
                    <button type="submit" class="btn-principal"
                        >Guardar Cambios</button
                    >
                    <button
                        type="button"
                        class="btn-secundario"
                        onclick="cerrarModalGestionarCuenta()">Cancelar</button
                    >
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    import { actions } from "astro:actions";
    import Swal from "sweetalert2";

    declare global {
        interface Window {
            abrirModalGestionarCuenta: (
                correo: string,
                rol: string,
                idCuenta?: string,
            ) => void;
            cerrarModalGestionarCuenta: () => void;
        }
    }

    let cuentaActual: any = null;

    function abrirModalGestionarCuenta(
        correo: string,
        rol: string,
        idCuenta?: string,
    ): void {
        const modal = document.getElementById("modalGestionarCuenta");
        if (!modal) return;

        const correoInput = document.getElementById(
            "correoCuenta",
        ) as HTMLInputElement;
        const rolSelect = document.getElementById(
            "rolCuenta",
        ) as HTMLSelectElement;

        if (correoInput && rolSelect) {
            correoInput.value = correo;
            rolSelect.value = rol;
        }

        // Guardar información de la cuenta actual
        cuentaActual = {
            id: idCuenta,
            correo: correo,
            rol: rol,
        };

        modal.style.display = "block";
    }

    function cerrarModalGestionarCuenta() {
        const modal = document.getElementById("modalGestionarCuenta");
        if (modal) {
            modal.style.display = "none";
            (
                document.getElementById("formGestionCuenta") as HTMLFormElement
            )?.reset();
            cuentaActual = null;
        }
    }

    // Manejar envío del formulario
    document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById(
            "formGestionCuenta",
        ) as HTMLFormElement;
        const btnEliminar = document.querySelector(
            ".btn-eliminar",
        ) as HTMLButtonElement;

        if (form) {
            form.addEventListener("submit", async (e) => {
                e.preventDefault();

                if (!cuentaActual?.id) {
                    await Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "No se puede modificar la cuenta sin un ID válido",
                        confirmButtonColor: "#dc2626",
                    });
                    return;
                }

                const formData = new FormData(form);
                formData.append("id_cue", cuentaActual.id);

                try {
                    const { data, error } =
                        await actions.modificarCuenta(formData);

                    if (data?.success) {
                        await Swal.fire({
                            icon: "success",
                            title: "Éxito",
                            text: "Cuenta actualizada correctamente",
                            confirmButtonColor: "#059669",
                        });
                        cerrarModalGestionarCuenta();
                        window.location.reload();
                    } else {
                        await Swal.fire({
                            icon: "error",
                            title: "Error",
                            text:
                                data?.message ||
                                "No se pudo actualizar la cuenta",
                            confirmButtonColor: "#dc2626",
                        });
                    }
                } catch (error) {
                    console.error("Error:", error);
                    await Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "Error al procesar la solicitud",
                        confirmButtonColor: "#dc2626",
                    });
                }
            });
        }

        // Manejar eliminación de cuenta
        if (btnEliminar) {
            btnEliminar.addEventListener("click", async () => {
                if (!cuentaActual?.id) {
                    await Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "No se puede eliminar la cuenta sin un ID válido",
                        confirmButtonColor: "#dc2626",
                    });
                    return;
                }

                const resultado = await Swal.fire({
                    title: "¿Estás seguro?",
                    text: "Esta acción eliminará permanentemente la cuenta",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#dc2626",
                    cancelButtonColor: "#6b7280",
                    confirmButtonText: "Sí, eliminar",
                    cancelButtonText: "Cancelar",
                });

                if (resultado.isConfirmed) {
                    try {
                        const { data, error } = await actions.eliminarCuenta({
                            id_cue: cuentaActual.id,
                        });

                        if (data?.success) {
                            await Swal.fire({
                                icon: "success",
                                title: "Eliminada",
                                text: "La cuenta ha sido eliminada correctamente",
                                confirmButtonColor: "#059669",
                            });
                            cerrarModalGestionarCuenta();
                            window.location.reload();
                        } else {
                            await Swal.fire({
                                icon: "error",
                                title: "Error",
                                text:
                                    data?.message ||
                                    "No se pudo eliminar la cuenta",
                                confirmButtonColor: "#dc2626",
                            });
                        }
                    } catch (error) {
                        console.error("Error:", error);
                        await Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: "Error al procesar la solicitud",
                            confirmButtonColor: "#dc2626",
                        });
                    }
                }
            });
        }
    });

    window.abrirModalGestionarCuenta = abrirModalGestionarCuenta;
    window.cerrarModalGestionarCuenta = cerrarModalGestionarCuenta;

    window.addEventListener("click", (event) => {
        const modal = document.getElementById("modalGestionarCuenta");
        if (event.target === modal) {
            cerrarModalGestionarCuenta();
        }
    });
</script>
