---
import "../styles/ModalModificarEvento.css";

interface Props {
    categorias?: any[];
    organizadores?: any[];
}

const { categorias = [], organizadores = [] } = Astro.props;
---

<div id="modalNuevoEvento" class="modal">
    <div class="modal-contenido">
        <span class="cerrar" onclick="cerrarModalNuevo()">&times;</span>
        <div class="formulario-completo">
            <form
                class="formulario-modificar-registro"
                action="/crear-evento"
                method="POST"
                id="formulario-nuevo-evento"
            >
                <div class="contenedor-superior">
                    <p class="texto-centrado texto-rojo">Información General</p>

                    <div class="contenedor-dato">
                        <p class="texto-dato">Nombre</p>
                        <div class="contenedor-input">
                            <input
                                type="text"
                                class="input-dato"
                                name="nombre"
                                required
                            />
                        </div>
                    </div>

                    <div class="contenedor-dato">
                        <p class="texto-dato">Descripción</p>
                        <div class="contenedor-input">
                            <textarea
                                class="input-dato"
                                name="descripcion"
                                rows="3"
                                required></textarea>
                        </div>
                    </div>

                    <div class="contenedor-nombre">
                        <div class="contenedor-dato">
                            <p class="texto-dato">Categoría:</p>
                            <div class="contenedor-input">
                                <select
                                    name="categoria"
                                    class="input-dato"
                                    required
                                >
                                    <option value="">Elija una Categoría</option
                                    >
                                    {
                                        categorias.map((categoria) => (
                                            <option value={categoria.id_cat}>
                                                {categoria.nom_cat}
                                            </option>
                                        ))
                                    }
                                </select>
                            </div>
                        </div>

                        <div class="contenedor-dato">
                            <p class="texto-dato">Área:</p>
                            <div class="contenedor-input">
                                <select name="area" class="input-dato">
                                    <option value="">Elija una Área</option>
                                    <option value="PRACTICA">Práctica</option>
                                    <option value="INVESTIGACION"
                                        >Investigación</option
                                    >
                                    <option value="ACADEMICA">Académica</option>
                                    <option value="TECNICA">Técnica</option>
                                    <option value="INDUSTRIAL"
                                        >Industrial</option
                                    >
                                    <option value="EMPRESARIAL"
                                        >Empresarial</option
                                    >
                                    <option value="IA">IA</option>
                                    <option value="REDES">Redes</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="contenedor-dato">
                        <p class="texto-dato">Precio (USD):</p>
                        <div class="contenedor-input">
                            <input
                                type="number"
                                step="0.01"
                                min="0"
                                class="input-dato"
                                name="precio"
                                value="0"
                            />
                        </div>
                    </div>
                </div>

                <div class="contenedor-superior">
                    <p class="texto-centrado texto-rojo">Programación</p>
                    <div class="contenedor-nombre">
                        <div class="contenedor-dato">
                            <p class="texto-dato">Fecha de Inicio:</p>
                            <div class="contenedor-input">
                                <input
                                    type="date"
                                    class="input-dato"
                                    name="fecha-inicio"
                                    required
                                />
                            </div>
                        </div>

                        <div class="contenedor-dato">
                            <p class="texto-dato">Hora de Inicio:</p>
                            <div class="contenedor-input">
                                <input
                                    type="time"
                                    class="input-dato"
                                    name="hora-inicio"
                                    required
                                />
                            </div>
                        </div>
                    </div>

                    <div class="contenedor-nombre">
                        <div class="contenedor-dato">
                            <p class="texto-dato">Fecha de Finalización:</p>
                            <div class="contenedor-input">
                                <input
                                    type="date"
                                    class="input-dato"
                                    name="fecha-fin"
                                />
                            </div>
                        </div>

                        <div class="contenedor-dato">
                            <p class="texto-dato">Hora de Finalización:</p>
                            <div class="contenedor-input">
                                <input
                                    type="time"
                                    class="input-dato"
                                    name="hora-fin"
                                />
                            </div>
                        </div>
                    </div>

                    <div class="contenedor-dato">
                        <p class="texto-dato">Duración (horas)</p>
                        <div class="contenedor-input">
                            <input
                                type="number"
                                min="1"
                                class="input-dato"
                                name="duracion"
                            />
                        </div>
                    </div>

                    <div class="contenedor-dato">
                        <p class="texto-dato">Ubicación</p>
                        <div class="contenedor-input">
                            <input
                                type="text"
                                class="input-dato"
                                name="ubicacion"
                                required
                            />
                        </div>
                    </div>
                </div>

                <div class="contenedor-inferior">
                    <p class="texto-centrado texto-rojo">Organizador</p>
                    <div class="contenedor-dato">
                        <p class="texto-dato">Organizador</p>
                        <div class="contenedor-input">
                            <select
                                name="cedula-organizador"
                                class="input-dato"
                                required
                            >
                                <option value=""
                                    >Seleccione un Organizador</option
                                >
                                {
                                    organizadores.map((organizador) => (
                                        <option value={organizador.ced_org}>
                                            {organizador.nom_org1}{" "}
                                            {organizador.nom_org2 || ""}{" "}
                                            {organizador.ape_org1}{" "}
                                            {organizador.ape_org2} -{" "}
                                            {organizador.ced_org}
                                        </option>
                                    ))
                                }
                            </select>
                        </div>
                    </div>

                    <div class="contenedor-boton-modificar">
                        <button
                            type="button"
                            class="boton-modificar"
                            onclick="cerrarModalNuevo()">Cancelar</button
                        >
                        <button type="submit" class="boton-modificar"
                            >Crear Evento</button
                        >
                    </div>
                </div>
            </form>

            <div class="contenedor-imagen">
                <img
                    id="nueva-evento-imagen"
                    class="imagen-evento"
                    style="display: none;"
                    alt="Imagen del nuevo evento"
                />
                <div class="contenedor-file">
                    <label for="file-upload-nuevo" class="custom-file-upload">
                        <img
                            src="/img/CRUD/upload.png"
                            alt="Subir imagen"
                            class="upload-icon"
                        />
                        <span>Seleccionar imagen</span>
                    </label>
                    <input
                        id="file-upload-nuevo"
                        type="file"
                        class="input-file"
                        accept="image/*"
                    />
                    <p class="file-name">
                        No se ha seleccionado ningún archivo
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    import { actions } from "astro:actions";
    import Swal from "sweetalert2";

    declare global {
        interface Window {
            abrirModalNuevo: () => void;
            cerrarModalNuevo: () => void;
        }
    }

    function abrirModalNuevo(): void {
        const modal = document.getElementById("modalNuevoEvento");
        if (modal) modal.style.display = "block";
    }

    function cerrarModalNuevo(): void {
        const modal = document.getElementById("modalNuevoEvento");
        const form = document.getElementById(
            "formulario-nuevo-evento",
        ) as HTMLFormElement;

        if (modal && form) {
            modal.style.display = "none";
            form.reset();

            // Resetear imagen
            const imagen = document.getElementById(
                "nueva-evento-imagen",
            ) as HTMLImageElement;
            const fileName = document.querySelector(
                "#modalNuevoEvento .file-name",
            ) as HTMLElement;
            if (imagen) imagen.style.display = "none";
            if (fileName)
                fileName.textContent = "No se ha seleccionado ningún archivo";
        }
    }

    document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById(
            "formulario-nuevo-evento",
        ) as HTMLFormElement;
        const fileInput = document.getElementById(
            "file-upload-nuevo",
        ) as HTMLInputElement;
        const fileNameDisplay = document.querySelector(
            "#modalNuevoEvento .file-name",
        ) as HTMLElement;
        const nuevaEventoImagen = document.getElementById(
            "nueva-evento-imagen",
        ) as HTMLImageElement;

        // Manejar cambio de archivo
        if (fileInput && fileNameDisplay && nuevaEventoImagen) {
            fileInput.addEventListener("change", (e: Event) => {
                const target = e.target as HTMLInputElement;
                const file = target.files?.[0];

                if (file && file.type.match("image.*")) {
                    fileNameDisplay.textContent = file.name;
                    const reader = new FileReader();
                    reader.onload = (event) => {
                        if (event.target?.result) {
                            nuevaEventoImagen.src = event.target
                                .result as string;
                            nuevaEventoImagen.style.display = "block";
                        }
                    };
                    reader.readAsDataURL(file);
                } else {
                    fileNameDisplay.textContent =
                        "No se ha seleccionado ningún archivo válido";
                    nuevaEventoImagen.style.display = "none";
                }
            });
        }

        // Manejar envío del formulario
        if (form) {
            form.addEventListener("submit", async (e) => {
                e.preventDefault();

                const formData = new FormData(form);

                // Obtener valores y validar área
                const areaValue = formData.get("area") as string;
                const fechaFin = formData.get("fecha-fin") as string;
                const horaFin = formData.get("hora-fin") as string;
                const duracionStr = formData.get("duracion") as string;

                // Validar que el área sea uno de los valores permitidos
                const areasPermitidas = [
                    "PRACTICA",
                    "INVESTIGACION",
                    "ACADEMICA",
                    "TECNICA",
                    "INDUSTRIAL",
                    "EMPRESARIAL",
                    "IA",
                    "REDES",
                ];
                const areaValida =
                    areaValue && areasPermitidas.includes(areaValue)
                        ? areaValue
                        : undefined;
                const eventoData = {
                    nombre: formData.get("nombre") as string,
                    descripcion: formData.get("descripcion") as string,
                    categoria: formData.get("categoria") as string, // Este es el ID de la categoría
                    precio: parseFloat(formData.get("precio") as string) || 0,
                    fecha_inicio: formData.get("fecha-inicio") as string,
                    hora_inicio: formData.get("hora-inicio") as string,
                    ubicacion: formData.get("ubicacion") as string,
                    cedula_organizador: formData.get(
                        "cedula-organizador",
                    ) as string,
                    // Campos opcionales - solo incluir si tienen valor válido
                    ...(areaValida && {
                        area: areaValida as
                            | "PRACTICA"
                            | "INVESTIGACION"
                            | "ACADEMICA"
                            | "TECNICA"
                            | "INDUSTRIAL"
                            | "EMPRESARIAL"
                            | "IA"
                            | "REDES",
                    }),
                    ...(fechaFin && { fecha_fin: fechaFin }),
                    ...(horaFin && { hora_fin: horaFin }),
                    ...(duracionStr && { duracion: parseInt(duracionStr) }),
                };

                try {
                    const { data, error } =
                        await actions.crearEvento(eventoData);

                    if (data?.success) {
                        await Swal.fire({
                            icon: "success",
                            title: "Éxito",
                            text: "Evento creado correctamente.",
                            confirmButtonColor: "#059669",
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        await Swal.fire({
                            icon: "error",
                            title: "Error",
                            text:
                                error?.message || "No se pudo crear el evento.",
                            confirmButtonColor: "#dc2626",
                        });
                    }
                } catch (error) {
                    console.error("Error:", error);
                    await Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "Error al procesar la solicitud",
                        confirmButtonColor: "#dc2626",
                    });
                }
            });
        }

        // Asignar funciones al objeto window
        window.abrirModalNuevo = abrirModalNuevo;
        window.cerrarModalNuevo = cerrarModalNuevo;
    });
</script>
