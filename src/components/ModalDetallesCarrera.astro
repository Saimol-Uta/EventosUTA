---
// Modal para mostrar detalles de carreras
interface Carrera {
    id_car: string;
    nom_car: string;
    des_car: string;
    nom_fac_per: string;
    cod_car?: string;
    asignaciones?: Array<{
        id_asi: string;
        nom_asi: string;
        des_asi: string;
    }>;
    usuarios?: Array<{
        id_usu: string;
        nom_usu1: string;
        ape_usu1: string;
        ced_usu?: string;
    }>;
}
---

<div
    id="modalDetallesCarrera"
    class="modal fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50"
>
    <div
        class="bg-white rounded-lg shadow-xl max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto"
    >
        <div class="p-6 border-b border-gray-200">
            <div class="flex justify-between items-center">
                <h2 class="text-xl font-semibold text-gray-900">
                    Detalles de la Carrera
                </h2>
                <button
                    onclick="cerrarModalDetallesCarrera()"
                    class="text-gray-400 hover:text-gray-600 focus:outline-none"
                >
                    <svg
                        class="w-6 h-6"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
        </div>

        <div id="contenidoDetallesCarrera" class="p-6">
            <!-- El contenido se cargará dinámicamente -->
        </div>
    </div>
</div>

<script>
    import { actions } from "astro:actions";
    import Swal from "sweetalert2";

    // Variable para almacenar los datos de la carrera actual
    let carreraActual: any = null;

    async function abrirModalDetallesCarrera(carreraId: string) {
        try {
            // Mostrar indicador de carga
            const modal = document.getElementById("modalDetallesCarrera");
            const contenido = document.getElementById(
                "contenidoDetallesCarrera",
            );

            if (modal && contenido) {
                // Mostrar modal con indicador de carga
                contenido.innerHTML = `
                    <div class="flex justify-center items-center py-12">
                        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
                        <span class="ml-3 text-gray-600">Cargando información...</span>
                    </div>
                `;
                modal.classList.remove("hidden");
                modal.classList.add("flex");

                // Obtener datos de la carrera
                const { data, error } = await actions.getCarreraById({
                    id_car: carreraId,
                });

                if (error || !data?.carrera) {
                    await Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "No se pudo obtener la información de la carrera",
                        confirmButtonColor: "#dc2626",
                    });
                    cerrarModalDetallesCarrera();
                    return;
                }

                carreraActual = data.carrera;
                mostrarDetallesCarrera(carreraActual);
            }
        } catch (error) {
            console.error("Error al cargar detalles de carrera:", error);
            await Swal.fire({
                icon: "error",
                title: "Error",
                text: "Error al cargar los detalles de la carrera",
                confirmButtonColor: "#dc2626",
            });
            cerrarModalDetallesCarrera();
        }
    }

    function mostrarDetallesCarrera(carrera: any) {
        const contenido = document.getElementById("contenidoDetallesCarrera");

        if (contenido) {
            contenido.innerHTML = `
                <div class="space-y-6">
                    <!-- Información General -->
                    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                            <svg class="w-5 h-5 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            Información General
                        </h3>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div class="space-y-3">
                                <div>
                                    <dt class="text-sm font-medium text-gray-500">Nombre de la Carrera</dt>
                                    <dd class="text-lg font-semibold text-gray-900">${carrera.nom_car}</dd>
                                </div>
                                <div>
                                    <dt class="text-sm font-medium text-gray-500">Código</dt>
                                    <dd class="text-sm text-gray-900">
                                        ${
                                            carrera.cod_car
                                                ? `<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">${carrera.cod_car}</span>`
                                                : '<span class="text-gray-400">No asignado</span>'
                                        }
                                    </dd>
                                </div>
                                <div>
                                    <dt class="text-sm font-medium text-gray-500">Facultad</dt>
                                    <dd class="text-sm text-gray-900">${carrera.nom_fac_per}</dd>
                                </div>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Descripción</dt>
                                <dd class="text-sm text-gray-900 mt-1 p-3 bg-white rounded border">${carrera.des_car}</dd>
                            </div>
                        </div>
                    </div>

                    <!-- Estadísticas -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div class="bg-white border border-gray-200 rounded-lg p-6">
                            <div class="flex items-center">
                                <div class="flex-shrink-0">
                                    <div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                                        <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v11a2 2 0 002 2h2m0-13h10a2 2 0 012 2v11a2 2 0 01-2 2H9m0-13v13"></path>
                                        </svg>
                                    </div>
                                </div>
                                <div class="ml-4">
                                    <div class="text-2xl font-bold text-blue-600">${carrera.asignaciones?.length || 0}</div>
                                    <div class="text-sm text-gray-500">Asignaciones asociadas</div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="bg-white border border-gray-200 rounded-lg p-6">
                            <div class="flex items-center">
                                <div class="flex-shrink-0">
                                    <div class="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center">
                                        <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                                        </svg>
                                    </div>
                                </div>
                                <div class="ml-4">
                                    <div class="text-2xl font-bold text-green-600">${carrera.usuarios?.length || 0}</div>
                                    <div class="text-sm text-gray-500">Estudiantes registrados</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    ${
                        carrera.asignaciones && carrera.asignaciones.length > 0
                            ? `
                        <!-- Asignaciones -->
                        <div class="bg-white border border-gray-200 rounded-lg">
                            <div class="px-6 py-4 border-b border-gray-200">
                                <h3 class="text-lg font-medium text-gray-900 flex items-center">
                                    <svg class="w-5 h-5 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v11a2 2 0 002 2h2m0-13h10a2 2 0 012 2v11a2 2 0 01-2 2H9m0-13v13"></path>
                                    </svg>
                                    Asignaciones (${carrera.asignaciones.length})
                                </h3>
                            </div>
                            <div class="p-6">
                                <div class="space-y-3 max-h-60 overflow-y-auto">
                                    ${carrera.asignaciones
                                        .map(
                                            (asig: any) => `
                                        <div class="flex justify-between items-start p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors">
                                            <div class="flex-1">
                                                <div class="font-medium text-gray-900">${asig.nom_asi}</div>
                                                <div class="text-sm text-gray-600 mt-1">${asig.des_asi}</div>
                                            </div>
                                            <div class="ml-4">
                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                                    Activa
                                                </span>
                                            </div>
                                        </div>
                                    `,
                                        )
                                        .join("")}
                                </div>
                            </div>
                        </div>
                    `
                            : `
                        <div class="bg-gray-50 border border-gray-200 rounded-lg p-6 text-center">
                            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v11a2 2 0 002 2h2m0-13h10a2 2 0 012 2v11a2 2 0 01-2 2H9m0-13v13"></path>
                            </svg>
                            <h3 class="mt-2 text-sm font-medium text-gray-900">Sin asignaciones</h3>
                            <p class="mt-1 text-sm text-gray-500">Esta carrera aún no tiene asignaciones asociadas.</p>
                        </div>
                    `
                    }

                    ${
                        carrera.usuarios && carrera.usuarios.length > 0
                            ? `
                        <!-- Estudiantes -->
                        <div class="bg-white border border-gray-200 rounded-lg">
                            <div class="px-6 py-4 border-b border-gray-200">
                                <h3 class="text-lg font-medium text-gray-900 flex items-center">
                                    <svg class="w-5 h-5 mr-2 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                                    </svg>
                                    Estudiantes Registrados (${carrera.usuarios.length})
                                </h3>
                            </div>
                            <div class="p-6">
                                <div class="space-y-3 max-h-60 overflow-y-auto">
                                    ${carrera.usuarios
                                        .slice(0, 20)
                                        .map(
                                            (usuario: any) => `
                                        <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                                            <div class="flex items-center">
                                                <div class="flex-shrink-0">
                                                    <div class="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                                                        <span class="text-sm font-medium text-green-600">
                                                            ${usuario.nom_usu1?.charAt(0) || "U"}
                                                        </span>
                                                    </div>
                                                </div>
                                                <div class="ml-3">
                                                    <div class="text-sm font-medium text-gray-900">
                                                        ${usuario.nom_usu1} ${usuario.ape_usu1}
                                                    </div>
                                                    <div class="text-xs text-gray-500">
                                                        ${usuario.ced_usu || "Sin cédula registrada"}
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    `,
                                        )
                                        .join("")}
                                    ${
                                        carrera.usuarios.length > 20
                                            ? `
                                        <div class="text-center text-sm text-gray-500 pt-3 border-t border-gray-200">
                                            Y ${carrera.usuarios.length - 20} estudiantes más...
                                        </div>
                                    `
                                            : ""
                                    }
                                </div>
                            </div>
                        </div>
                    `
                            : `
                        <div class="bg-gray-50 border border-gray-200 rounded-lg p-6 text-center">
                            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                            </svg>
                            <h3 class="mt-2 text-sm font-medium text-gray-900">Sin estudiantes</h3>
                            <p class="mt-1 text-sm text-gray-500">Esta carrera aún no tiene estudiantes registrados.</p>
                        </div>
                    `
                    }

                    <!-- Acciones adicionales -->
                    
                </div>
            `;
        }
    }

    function cerrarModalDetallesCarrera() {
        const modal = document.getElementById("modalDetallesCarrera");
        if (modal) {
            modal.classList.add("hidden");
            modal.classList.remove("flex");
        }
        carreraActual = null;
    }

    // Funciones adicionales
    function editarCarreraDesdeModal(carreraId: string) {
        cerrarModalDetallesCarrera();
        if (window.editarCarrera) {
            window.editarCarrera(carreraId);
        }
    }

    function exportarDatosCarrera(carreraId: string) {
        if (!carreraActual) return;

        const datos = {
            informacion_general: {
                nombre: carreraActual.nom_car,
                codigo: carreraActual.cod_car,
                descripcion: carreraActual.des_car,
                facultad: carreraActual.nom_fac_per,
            },
            estadisticas: {
                total_asignaciones: carreraActual.asignaciones?.length || 0,
                total_estudiantes: carreraActual.usuarios?.length || 0,
            },
            asignaciones: carreraActual.asignaciones || [],
            estudiantes: carreraActual.usuarios || [],
        };

        const dataStr = JSON.stringify(datos, null, 2);
        const dataBlob = new Blob([dataStr], { type: "application/json" });
        const url = URL.createObjectURL(dataBlob);

        const link = document.createElement("a");
        link.href = url;
        link.download = `carrera_${carreraActual.cod_car || carreraActual.nom_car}_datos.json`;
        link.click();

        URL.revokeObjectURL(url);

        Swal.fire({
            icon: "success",
            title: "Exportado",
            text: "Los datos de la carrera han sido exportados exitosamente",
            confirmButtonColor: "#059669",
        });
    }

    function generarReporteCarrera(carreraId: string) {
        if (!carreraActual) return;

        Swal.fire({
            icon: "info",
            title: "Generando Reporte",
            text: "Esta funcionalidad estará disponible próximamente",
            confirmButtonColor: "#3b82f6",
        });
    }

    // Event listener para cerrar modal con ESC
    document.addEventListener("keydown", (event) => {
        if (event.key === "Escape") {
            const modal = document.getElementById("modalDetallesCarrera");
            if (modal && !modal.classList.contains("hidden")) {
                cerrarModalDetallesCarrera();
            }
        }
    });

    // Event listener para cerrar modal al hacer clic fuera
    document.addEventListener("click", (event) => {
        const target = event.target as HTMLElement;
        if (target.id === "modalDetallesCarrera") {
            cerrarModalDetallesCarrera();
        }
    });

    // Exponer funciones globalmente
    declare global {
        interface Window {
            abrirModalDetallesCarrera: (carreraId: string) => Promise<void>;
            cerrarModalDetallesCarrera: () => void;
            editarCarrera?: (carreraId: string) => Promise<void>;
        }
    }

    window.abrirModalDetallesCarrera = abrirModalDetallesCarrera;
    window.cerrarModalDetallesCarrera = cerrarModalDetallesCarrera;
</script>
