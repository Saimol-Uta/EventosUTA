---
const { userName, userImage } = Astro.props;

const { isMaster, isStudent, isUser, isAdmin, isLoggedIn } = Astro.locals;
---

<div class="relative inline-block text-left z-[60]">
  <details class="group">
    <summary
      class="flex items-center gap-3 px-4 py-2 bg-white hover:cursor-pointer"
    >
      <span
        class="text-gray-800 font-medium text-sm py-2 relative tracking-wide transition-colors duration-200 before:content-[''] before:absolute before:left-0 before:bottom-1 before:h-[2px] before:bg-gray-800 before:transition-all before:duration-300 before:w-0 hover:before:w-full"
        >{userName}</span
      >
      <img
        src={userImage}
        alt="Usuario"
        class="w-10 h-10 rounded-full object-cover bg-black"
      />
    </summary>

    <div
      class="absolute right-0 mt-2 w-48 bg-white border border-gray-200 shadow-lg z-50"
    >
      <div class="h-2 -mt-2"></div>
      {
        (isAdmin && (
          <a
            href="/homeAdmin"
            class="block px-4 py-2 text-sm text-gray-500 hover:text-red-900 hover:bg-gray-100 transition-all duration-200"
          >
            Ver perfil
          </a>
        )) || (
          <a
            href="/homeUser"
            class="block px-4 py-2 text-sm text-gray-500 hover:text-red-900 hover:bg-gray-100"
          >
            Ver perfil
          </a>
        )
      }
      {
        (isAdmin && <div />) || (
          <a
            href="/User/historial"
            class="block px-4 py-2 text-sm text-gray-500 hover:text-red-900 hover:bg-gray-100"
          >
            Historial
          </a>
        )
      }

      <a
        href="/"
        class="block px-4 py-2 text-sm text-gray-500 hover:text-red-900 hover:bg-gray-100"
        id="logout-link">Cerrar sesión</a
      >
    </div>
  </details>
</div>
<script>
  const { signOut } = await import("auth-astro/client");
  const logoutElem = document.querySelector(
    "#logout-link"
  ) as HTMLAnchorElement;
  let isLoggingOut = false; // Variable para prevenir múltiples clicks

  logoutElem?.addEventListener("click", async (e) => {
    e.preventDefault();

    if (isLoggingOut) return; // Prevenir múltiples clicks
    isLoggingOut = true;

    try {
      await signOut();
      sessionStorage.clear();
      localStorage.clear();
      window.location.href = "/";
    } catch (error) {
      console.error("Error al cerrar sesión:", error);
      isLoggingOut = false; // Resetear el flag en caso de error
    }
  });
  // Este código se ejecuta en el cliente
  document.addEventListener("click", (event) => {
    const detailsElement = document.querySelector(".relative details");

    if (detailsElement && detailsElement.hasAttribute("open")) {
      const clickedInside = detailsElement.contains(event.target);

      if (!clickedInside) {
        detailsElement.removeAttribute("open");
      }
    }
  });
</script>
