---
import "../styles/global.css";

// Función para formatear duración
const formatearDuracion = (horas: number) => {
    if (!horas) return "Sin especificar";
    if (horas < 24) {
        const horasRedondeadas = Math.round(horas * 100) / 100;
        return horasRedondeadas === 1 ? "1 hora" : `${horasRedondeadas} horas`;
    } else {
        const dias = Math.floor(horas / 24);
        const horasRestantes = Math.round(horas % 24);
        if (horasRestantes === 0) {
            return `${dias} ${dias === 1 ? "día" : "días"}`;
        } else {
            return `${dias} ${dias === 1 ? "día" : "días"} ${horasRestantes}h`;
        }
    }
};

const {
    imagen,
    titulo,
    resumen,
    horas,
    slug,
    estado,
    precio,
    modoAdmin = false,
    idEvento,
    esDestacado = false,
} = Astro.props;
---

<div class="w-full max-w-sm mx-auto group" data-titulo={titulo.toLowerCase()}>
    <a
        href={`/Eventos/${slug}`}
        class="block relative overflow-hidden rounded-3xl bg-gray-900 shadow-2xl transition-all duration-500 hover:scale-105 hover:shadow-3xl transform-gpu"
    >
        <div class="relative w-full h-80">
            <img
                class="absolute inset-0 w-full h-full object-cover object-center filter brightness-90 contrast-110 transition-transform duration-700 group-hover:scale-110"
                src={imagen || "/img/logo-fisei.png"}
                alt={`Imagen de ${titulo}`}
                loading="lazy"
            />
            <div
                class="absolute inset-0 bg-gradient-to-tr from-black/70 via-transparent to-transparent"
            >
            </div>

            {
                estado && (
                    <div
                        class={`absolute top-4 left-4 flex items-center gap-2 px-4 py-2 rounded-full text-xs font-bold text-white backdrop-blur-md border border-white/25 shadow-lg z-10 uppercase tracking-wider transition-all duration-300 ${
                            estado.toLowerCase() === "activo"
                                ? "bg-green-500/80"
                                : estado.toLowerCase() === "pendiente"
                                  ? "bg-yellow-500/80"
                                  : estado.toLowerCase() === "finalizado"
                                    ? "bg-red-500/80"
                                    : "bg-white/15"
                        }`}
                    >
                        <span
                            class={`w-2 h-2 rounded-full animate-pulse ${
                                estado.toLowerCase() === "activo"
                                    ? "bg-green-400"
                                    : estado.toLowerCase() === "pendiente"
                                      ? "bg-yellow-400"
                                      : estado.toLowerCase() === "finalizado"
                                        ? "bg-red-400"
                                        : "bg-white"
                            }`}
                        />
                        {estado}
                    </div>
                )
            }

            <div
                class="absolute bottom-5 left-5 right-5 p-4 bg-white/10 backdrop-blur-xl rounded-2xl border border-white/20 shadow-2xl z-10 h-32"
            >
                <h3
                    class="text-base font-bold text-white mb-6 leading-tight drop-shadow-lg line-clamp-2 h-10"
                >
                    {titulo}
                </h3>
                <!-- <p
                    class="text-xs text-gray-200 mb-0 leading-relaxed opacity-90 line-clamp-2 h-8"
                >
                    {resumen}
                </p> -->

                <div class="flex flex-wrap items-center gap-2">
                    <span
                        class="inline-flex items-center gap-1 px-2 py-1 bg-blue-100 text-blue-800 text-xs font-semibold rounded-full uppercase tracking-wider"
                    >
                        <svg
                            class="w-2.5 h-2.5"
                            fill="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path
                                d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                            ></path>
                        </svg>
                        {formatearDuracion(horas)}
                    </span>

                    {
                        precio == 0 ||
                        precio === null ||
                        precio === undefined ? (
                            <span class="inline-flex items-center gap-1 px-2 py-1 bg-green-100 text-green-800 text-xs font-semibold rounded-full uppercase tracking-wider">
                                <svg
                                    class="w-2.5 h-2.5"
                                    fill="currentColor"
                                    viewBox="0 0 24 24"
                                >
                                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" />
                                </svg>
                                Gratuito
                            </span>
                        ) : (
                            <span class="inline-flex items-center gap-1 px-2 py-1 bg-red-100 text-red-800 text-xs font-semibold rounded-full uppercase tracking-wider">
                                <svg
                                    class="w-2.5 h-2.5"
                                    fill="currentColor"
                                    viewBox="0 0 24 24"
                                >
                                    <path d="M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4z" />
                                </svg>
                                ${Number(precio).toFixed(2)}
                            </span>
                        )
                    }
                </div>
            </div>
        </div>
    </a>

    {
        modoAdmin && (
            <button
                class={`absolute top-4 right-4 w-10 h-10 rounded-full border border-white/25 backdrop-blur-md shadow-lg transition-all duration-300 hover:scale-110 hover:bg-white hover:shadow-xl z-20 ${
                    esDestacado
                        ? "bg-yellow-400 text-yellow-900"
                        : "bg-white/20 text-white hover:text-gray-700"
                }`}
                data-id={idEvento}
                onclick="toggleFavorito(this)"
                title="Marcar como destacado"
                type="button"
            >
                <svg
                    class="w-5 h-5 mx-auto transition-transform duration-300 hover:scale-110"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                >
                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" />
                </svg>
            </button>
        )
    }
</div>

<style>
    /* Clases adicionales que no están en Tailwind por defecto */
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .line-clamp-1 {
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .shadow-3xl {
        box-shadow: 0 35px 60px -12px rgba(0, 0, 0, 0.25);
    }

    .transform-gpu {
        transform: translateZ(0);
    }

    /* Animación personalizada para el indicador de estado */
    @keyframes pulse {
        0%,
        100% {
            opacity: 1;
        }
        50% {
            opacity: 0.5;
        }
    }

    .animate-pulse {
        animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    }

    /* Mejoras para accesibilidad */
    @media (prefers-reduced-motion: reduce) {
        * {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
        }
    }

    /* Responsive mejoras */
    @media (max-width: 640px) {
        .line-clamp-2 {
            -webkit-line-clamp: 1;
        }
    }
</style>
