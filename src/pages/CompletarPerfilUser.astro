---
import InformacionUsuario from "../components/InformacionUsuario.astro";
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Navbar from "../components/Navbar.astro";
import { actions } from "astro:actions";
import type { Usuario } from "../actions/Users/getUserByCedula.action";

const method = Astro.request.method;

let cedulaIngresada = "";
let mostrarFormulario = false;
let mostrarError = false;
let usuarioExistente = false;
let usuario: Usuario | null = null;

function formatDate(date: string | Date | null): string {
  if (!date) return "";
  const d = typeof date === "string" ? new Date(date) : date;
  return d.toISOString().substring(0, 10);
}

function validarCedula(cedula: string): boolean {
  if (!/^\d{10}$/.test(cedula)) return false;

  const provincia = parseInt(cedula.substring(0, 2), 10);
  if (provincia < 1 || provincia > 24) return false;

  const digitos = cedula.split("").map(Number);
  const digitoVerificador = digitos[9];

  let suma = 0;
  for (let i = 0; i < 9; i++) {
    let val = digitos[i];
    if (i % 2 === 0) {
      val *= 2;
      if (val > 9) val -= 9;
    }
    suma += val;
  }
  const decenaSuperior = Math.ceil(suma / 10) * 10;
  const digitoCalculado = decenaSuperior - suma;

  if (digitoCalculado === 10) {
    return digitoVerificador === 0;
  } else {
    return digitoVerificador === digitoCalculado;
  }
}

if (method === "POST") {
  const formData = await Astro.request.formData();
  const resetForm = formData.get("reset") === "true";

  if (resetForm) {
    cedulaIngresada = formData.get("ced_usu")?.toString() ?? "";
    mostrarFormulario = true;
    mostrarError = false;
    usuarioExistente = false;
    usuario = null;
  } else {
    cedulaIngresada = formData.get("ced_usu")?.toString() ?? "";

    if (formData.has("nom_usu1")) {
      // Guardar datos con setUser action, pasando FormData directo
      const resultadoGuardar = await Astro.callAction(actions.setUser, formData);

      if ("success" in resultadoGuardar && resultadoGuardar.success) {
        mostrarFormulario = false;
        usuarioExistente = false;
        usuario = null;
        cedulaIngresada = "";
        mostrarError = false;
      } else {
        mostrarError = true;
        mostrarFormulario = true;
      }
    } else {
      if (validarCedula(cedulaIngresada)) {
        mostrarFormulario = true;

        const resultado = await Astro.callAction(actions.getUserByCedula, {
          ced_usu: cedulaIngresada,
        });

        const data = resultado.data;
        if (data?.encontrado) {
          usuarioExistente = true;
          usuario = data.usuario ?? null;
        } else {
          usuarioExistente = false;
          usuario = null;
        }

        mostrarError = false;
      } else {
        mostrarError = true;
        mostrarFormulario = false;
        usuarioExistente = false;
        usuario = null;
      }
    }
  }
}

const camposFormulario = [
  { titulo: "Cédula", valor: cedulaIngresada, name: "ced_usu" },
  {
    titulo: "Primer nombre",
    valor: usuarioExistente ? usuario?.nom_usu1 ?? "" : "",
    name: "nom_usu1",
  },
  {
    titulo: "Segundo nombre",
    valor: usuarioExistente ? usuario?.nom_usu2 ?? "" : "",
    name: "nom_usu2",
  },
  {
    titulo: "Primer apellido",
    valor: usuarioExistente ? usuario?.ape_usu1 ?? "" : "",
    name: "ape_usu1",
  },
  {
    titulo: "Segundo apellido",
    valor: usuarioExistente ? usuario?.ape_usu2 ?? "" : "",
    name: "ape_usu2",
  },
  {
    titulo: "Fecha de nacimiento",
    valor: usuarioExistente ? formatDate(usuario?.fec_nac_usu ?? null) : "",
    name: "fec_nac_usu",
  },
  {
    titulo: "Teléfono",
    valor: usuarioExistente ? usuario?.num_tel_usu ?? "" : "",
    name: "num_tel_usu",
  },
  {
    titulo: "Carrera",
    valor: usuarioExistente ? usuario?.id_car_per ?? "" : "",
    name: "id_car_per",
  },
];

const textoPrincipal = usuarioExistente
  ? "Asociar este usuario a la cuenta"
  : "Guardar Información";
const textoSecundario = usuarioExistente ? "Cancelar" : "Más Tarde";
//const eventoSecundario = usuarioExistente ? vaciarCampos : () => location.reload();

---

<Layout>
  <Header />
  <Navbar />

  <div class="bg-gray-100 min-h-screen py-10">
    <div class="max-w-3xl mx-auto px-4 text-center">
      {mostrarFormulario ? (
        <InformacionUsuario
          camposFormulario={camposFormulario}
          mostrarBotones={true}
          textoBotonPrincipal={textoPrincipal}
          textoBotonSecundario={textoSecundario}
        />
      ) : (
        <form method="POST" class="formulario-container formulario-grid">
          <div class="campo-item">
            <label for="ced_usu">Ingrese su número de Cédula</label>
            <input
              type="text"
              id="ced_usu"
              name="ced_usu"
              value={cedulaIngresada}
              placeholder="Ej. 0101010101"
              required
              maxlength="10"
              inputmode="numeric"
              oninput="this.value = this.value.replace(/[^0-9]/g, '')"
            />
          </div>

          <div class="formulario-boton">
            <button type="submit">Continuar</button>
          </div>

          {mostrarError && (
            <p class="text-red-600 text-sm mt-2" style="grid-column: 1 / -1;">
              Cédula inválida.
            </p>
          )}
        </form>
      )}
    </div>
  </div>
</Layout>

<script is:inline>
  function vaciarCampos() {
    const form = document.createElement("form");
    form.method = "POST";

    const inputReset = document.createElement("input");
    inputReset.type = "hidden";
    inputReset.name = "reset";
    inputReset.value = "true";

    const inputCedula = document.createElement("input");
    inputCedula.type = "hidden";
    inputCedula.name = "ced_usu";
    inputCedula.value = document.getElementById("ced_usu").value || "";

    form.appendChild(inputReset);
    form.appendChild(inputCedula);
    document.body.appendChild(form);
    form.submit();
  }
</script>

<style>
  .formulario-container {
    background-color: #eee;
    border-radius: 8px;
    padding: 2rem;
    max-width: 500px;
    margin: 2rem auto;
    font-family: "Segoe UI", sans-serif;
    box-shadow: 0 0 4px rgba(0, 0, 0, 0.1);
  }

  .formulario-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }

  .campo-item {
    display: flex;
    flex-direction: column;
    gap: 6px;
  }

  .campo-item label {
    font-weight: bold;
    color: #8b0000;
    font-size: 14px;
  }

  .campo-item input {
    padding: 10px;
    font-size: 15px;
    border: 1px solid #ccc;
    border-radius: 6px;
    outline: none;
  }

  .campo-item input:focus {
    border-color: #8b0000;
    box-shadow: 0 0 0 2px rgba(139, 0, 0, 0.2);
  }

  .formulario-boton {
    text-align: center;
  }

  .formulario-boton button {
    background-color: #8b0000;
    color: white;
    font-size: 16px;
    padding: 10px 30px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
  }

  .formulario-boton button:hover {
    background-color: #a00;
  }
</style>
