---
import Header from "../../components/Header.astro";
import Layout from "../../layouts/Layout.astro";
import Navbar from "../../components/Navbar.astro";
import { actions } from "astro:actions";
import CursoDetalleCard from "../../components/CursoDetalleCard.astro";
import "../../styles/global.css";

interface Props {
    title?: string;
    category?: string;
    description?: string;
    location?: string;
    duration?: string;
    startDate?: string;
    endDate?: string;
    targetAudience?: string[];
    organizer?: string;
    image?: string;
    slug: string;
}

const { slug } = Astro.params;

const { data, error } = await Astro.callAction(
    actions.getEventoBySlug,
    slug ?? "",
);

if (error) {
    return Astro.redirect("/404");
}

const { evento } = data;

// Formatear fechas para mostrar
const formatearFecha = (fecha: string | Date) => {
    const date = typeof fecha === "string" ? new Date(fecha) : fecha;
    return date.toLocaleDateString("es-ES", {
        year: "numeric",
        month: "long",
        day: "numeric",
    });
};

// Formatear duración
const formatearDuracion = (minutos: number) => {
    if (minutos < 60) {
        return `${minutos} minutos`;
    } else if (minutos < 1440) {
        const horas = Math.floor(minutos / 60);
        const minutosRestantes = minutos % 60;
        return minutosRestantes > 0
            ? `${horas}h ${minutosRestantes}m`
            : `${horas} horas`;
    } else {
        const dias = Math.floor(minutos / 1440);
        const horasRestantes = Math.floor((minutos % 1440) / 60);
        return horasRestantes > 0
            ? `${dias} días ${horasRestantes}h`
            : `${dias} días`;
    }
};

// Función para comparar solo fechas (sin horas)
function esHoyODespues(fecha: Date) {
    const hoy = new Date();
    hoy.setHours(0, 0, 0, 0);
    const comparar = new Date(fecha);
    comparar.setHours(0, 0, 0, 0);
    return hoy >= comparar;
}

function esAntesDe(fecha: Date) {
    const hoy = new Date();
    hoy.setHours(0, 0, 0, 0);
    const comparar = new Date(fecha);
    comparar.setHours(0, 0, 0, 0);
    return hoy < comparar;
}

const inscripcionDisponible = () => {
    const inicio = new Date(evento.fec_ini_ins_eve);
    const fin = new Date(evento.fec_fin_ins_eve);
    return esHoyODespues(inicio) && !esAntesDe(fin);
};

const inscripcionProximamente = () => {
    const inicio = new Date(evento.fec_ini_ins_eve);
    return esAntesDe(inicio);
};
---

<Layout>
  <Header />
  <Navbar />

  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <CursoDetalleCard 
      evento={evento} 
      slug={slug} 
      formatearFecha={formatearFecha} 
      formatearDuracion={formatearDuracion} 
      inscripcionDisponible={inscripcionDisponible} 
      inscripcionProximamente={inscripcionProximamente}
    />
  </main>
</Layout>
