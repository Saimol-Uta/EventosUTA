---
import type { CustomUser } from '../../auth.config';
import { getSession } from 'auth-astro/server';

const session = await getSession(Astro.request);

// Si hay sesión y usuario, redirigir según rol
if (session && session.user) {
  const user = session.user as CustomUser;
  const rol = user.rol?.toUpperCase();

  if (rol === "ADMINISTRADOR" || rol === "MASTER") {
    return Astro.redirect("/homeAdmin");
  } else if (rol === "USUARIO" || rol === "ESTUDIANTE") {
    return Astro.redirect("/homeUser");
  }
}

// Si no hay sesión o usuario, mostrar login normalmente
---

<html lang="es">
    <head>
        <meta charset="UTF-8" />
        <title>Login - Talleres Tecnológicos</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                background-color: #fff;
                display: flex;
                justify-content: center;
                align-items: center;
                height: 100vh;
                margin: 0;
            }

            .login-container {
                border: 1px solid #ccc;
                padding: 30px 40px;
                text-align: center;
                max-width: 350px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            }

            .login-container img {
                width: 100%;
                max-width: 280px;
                margin-bottom: 20px;
            }

            .login-container input[type="email"],
            .login-container input[type="password"] {
                width: 100%;
                padding: 10px;
                margin-bottom: 15px;
                border: 1px solid #ccc;
                border-radius: 4px;
            }

            .login-container button {
                background-color: #a00;
                color: white;
                padding: 10px 20px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-size: 16px;
            }

            .login-container button:hover {
                background-color: #800000;
            }

            .login-container a {
                display: block;
                margin-top: 10px;
                font-size: 14px;
                text-decoration: none;
                color: #800000;
            }

            .login-container a:hover {
                text-decoration: underline;
            }

            .volver {
                position: absolute;
                top: 10px;
                right: 20px;
                font-size: 14px;
                color: #800000;
            }

            .volver:hover {
                text-decoration: underline;
            }
        </style>
    </head>
    <body>
        <a class="volver" href="/">Regresar</a>

        <div class="login-container">
            <img src="/img/logoFisei.png" alt="Logo Facultad de Ingeniería" />
            <form>
                <input type="email" name="email" placeholder="Usuario" required />
                <input type="password" name="password" placeholder="Contraseña" required />
                <button type="submit" id="btn-submit">Acceder</button>
                <p>¿No tiene una cuenta?</p>
                <a href="/register">Regístrese aquí</a>
            </form>
        </div>
    </body>
</html>
<script>

    window.addEventListener("DOMContentLoaded", async () => {
        const urlParams = new URLSearchParams(window.location.search);
        const error = urlParams.get("error");

        // Limpiar URL inmediatamente, antes de mostrar algo
        const cleanUrl = window.location.origin + window.location.pathname;
        window.history.replaceState({}, document.title, cleanUrl);

        if (error) {
        const { default: Swal } = await import("sweetalert2");
        await Swal.fire({
            icon: "error",
            title: "Error al ingresar",
            text: "Usuario / Contraseña no son correctos",
            confirmButtonColor: '#a00',
            heightAuto: false,
        });
        }
    });

    
    window.addEventListener("DOMContentLoaded", async () => {
        const { signIn } = await import("auth-astro/client");
        const form = document.querySelector("form") as HTMLFormElement;
        const btnSubmit = document.querySelector("#btn-submit") as HTMLButtonElement;

        form.addEventListener("submit", async (e) => {
            e.preventDefault();
            btnSubmit.setAttribute("disabled", "disabled");

            const formData = new FormData(form);

            await signIn("credentials", {
                email: formData.get("email"),
                password: formData.get("password"),
            });
        });
    });
</script>